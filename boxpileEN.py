# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'boxpile.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


# BoxPile V0.2.7 (Definitive)
# Developed by Eric Sánchez Jiménez and Jan Garcia Comas (ErtonDev and jansumega in Github)



from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from pathlib import Path
from datetime import date
import bptools as bp
import api



# Path and globals
client_path = Path(__file__)
conn = api.connect()
client = "None"
visit = "None"
sidebar = False
sharing = []
today = date.today().strftime("%A")
current_index = 0
current_subindex = 0



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        global current_index

        # MainWindow
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1080, 720)
        MainWindow.setStyleSheet("color: rgb(246, 246, 246);")
        MainWindow.setWindowIcon(QtGui.QIcon(str(("resources/logoTR_orange.png"))))

        # Central Widget
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # Sidebar and body layout
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 1081, 721))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")

        self.mainLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.mainLayout.setContentsMargins(0, 0, 0, 0)
        self.mainLayout.setObjectName("mainLayout")

        self.sideBarLayout = QtWidgets.QVBoxLayout()
        self.sideBarLayout.setSpacing(0)
        self.sideBarLayout.setObjectName("sideBarLayout")

        # Sidebar widgets
        self.banner = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(22)
        font.setBold(True)
        font.setWeight(75)
        self.banner.setFont(font)
        self.banner.setStyleSheet("color: rgb(254, 140, 10);\n"
"background-color: rgb(255, 255, 255);\n"
"border-radius: 0px;\n"
"padding: 50px;\n"
"padding-left: 40px;\n"
"text-align: left;")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(str(("resources/logoTR_orange.png"))), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.banner.setIcon(icon)
        self.banner.setIconSize(QtCore.QSize(45, 45))
        self.banner.setObjectName("banner")
        self.sideBarLayout.addWidget(self.banner)
        self.btnCalendario = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.btnCalendario.setFont(font)
        self.btnCalendario.setStyleSheet("QPushButton {\n"
"    padding: 20px;\n"
"    padding-left: 40px;\n"
"    text-align: left;\n"
"    color: rgb(8, 21, 63);\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(246, 246, 246);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(230, 230, 230);\n"
"}")
        self.btnCalendario.setObjectName("btnCalendario")
        self.sideBarLayout.addWidget(self.btnCalendario)
        self.btnSeguimiento = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.btnSeguimiento.setFont(font)
        self.btnSeguimiento.setStyleSheet("QPushButton {\n"
"    padding: 20px;\n"
"    padding-left: 40px;\n"
"    text-align: left;\n"
"    color: rgb(8, 21, 63);\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(246, 246, 246)\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(230, 230, 230);\n"
"}\n"
"")
        self.btnSeguimiento.setObjectName("btnSeguimiento")
        self.sideBarLayout.addWidget(self.btnSeguimiento)
        self.btnBusqueda = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.btnBusqueda.setFont(font)
        self.btnBusqueda.setStyleSheet("QPushButton {\n"
"    padding: 20px;\n"
"    padding-left: 40px;\n"
"    text-align: left;\n"
"    color: rgb(8, 21, 63);\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(246, 246, 246)\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(230, 230, 230);\n"
"}\n"
"")
        self.btnBusqueda.setObjectName("btnBusqueda")
        self.sideBarLayout.addWidget(self.btnBusqueda)
        self.sideBarFill = QtWidgets.QFrame(self.horizontalLayoutWidget)
        self.sideBarFill.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 0px;")
        self.sideBarFill.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.sideBarFill.setFrameShadow(QtWidgets.QFrame.Raised)
        self.sideBarFill.setObjectName("sideBarFill")
        self.sideBarLayout.addWidget(self.sideBarFill)
        self.btnUser = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setBold(True)
        font.setPointSize(12)
        self.btnUser.setFont(font)
        self.btnUser.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(8, 21, 63);\n"
"padding: 20px;\n"
"padding-left: 40px;\n"
"text-align: left")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(str(("resources/logoTR_blue.png"))), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnUser.setIcon(icon1)
        self.btnUser.setIconSize(QtCore.QSize(45, 45))
        self.btnUser.setObjectName("btnUser")
        self.sideBarLayout.addWidget(self.btnUser)
        self.mainLayout.addLayout(self.sideBarLayout)

        # Body non page exclusive widgets
        self.bodyLayout = QtWidgets.QGridLayout()
        self.bodyLayout.setObjectName("bodyLayout")
        self.stackedWidget = QtWidgets.QStackedWidget(self.horizontalLayoutWidget)
        self.stackedWidget.setObjectName("stackedWidget")

        # Login page
        self.loginPage = QtWidgets.QWidget()
        self.loginPage.setObjectName("loginPage")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.loginPage)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(10, 10, 801, 701))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.loginGrid = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.loginGrid.setContentsMargins(0, 0, 0, 0)
        self.loginGrid.setSpacing(0)
        self.loginGrid.setObjectName("loginGrid")
        self.loginGrey6 = QtWidgets.QFrame(self.gridLayoutWidget_2)
        self.loginGrey6.setStyleSheet("border-radius: 0px;")
        self.loginGrey6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.loginGrey6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.loginGrey6.setObjectName("loginGrey6")
        self.loginGrid.addWidget(self.loginGrey6, 2, 0, 1, 1)
        self.loginGrey4 = QtWidgets.QFrame(self.gridLayoutWidget_2)
        self.loginGrey4.setStyleSheet("border-radius: 0px;")
        self.loginGrey4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.loginGrey4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.loginGrey4.setObjectName("loginGrey4")
        self.loginGrid.addWidget(self.loginGrey4, 1, 0, 1, 1)
        self.loginWidget = QtWidgets.QWidget(self.gridLayoutWidget_2)
        self.loginWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.loginWidget.setObjectName("loginWidget")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.loginWidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(10, 10, 394, 498))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.loginVLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.loginVLayout.setContentsMargins(0, 0, 0, 0)
        self.loginVLayout.setSpacing(0)
        self.loginVLayout.setObjectName("loginVLayout")
        self.loginLogo = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.loginLogo.setStyleSheet("padding-left: 120px;\n"
"padding-right: 120px;\n"
"margin-top: 60px;\n"
"")
        self.loginLogo.setText("")
        self.loginLogo.setIcon(icon)
        self.loginLogo.setIconSize(QtCore.QSize(140, 140))
        self.loginLogo.setObjectName("loginLogo")
        self.loginVLayout.addWidget(self.loginLogo)
        self.loginTitle = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setBold(True)
        font.setPointSize(32)
        self.loginTitle.setFont(font)
        self.loginTitle.setStyleSheet("color: rgb(254, 140, 10);\n"
"padding-left: 120px;\n"
"padding-right: 120px;\n"
"padding-top: 5px;\n"
"padding-bottom: 40px;")
        self.loginTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.loginTitle.setObjectName("loginTitle")
        self.loginVLayout.addWidget(self.loginTitle)
        self.loginFormLayout = QtWidgets.QGridLayout()
        self.loginFormLayout.setObjectName("loginFormLayout")
        self.loginPassLineEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.loginPassLineEdit.setStyleSheet("QLineEdit {\n"
"    color: rgb(0, 0, 0);\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    border-color: rgb(207, 207, 207);\n"
"    background-color: rgb(246, 246, 246);\n"
"    margin: 5px;\n"
"    margin-right: 20px;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border-color: rgb(254, 140, 10);\n"
"    border-width: 2px;\n"
"}")
        self.loginPassLineEdit.setInputMask("")
        self.loginPassLineEdit.setEchoMode(QtWidgets.QLineEdit.Password)
        self.loginPassLineEdit.setObjectName("loginPassLineEdit")
        self.loginFormLayout.addWidget(self.loginPassLineEdit, 1, 2, 1, 1)
        self.loginUserPic = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.loginUserPic.setStyleSheet("padding: 5px;\n"
"margin-left: 15px;")
        self.loginUserPic.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(str(("resources/profile.png"))), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.loginUserPic.setIcon(icon2)
        self.loginUserPic.setIconSize(QtCore.QSize(25, 25))
        self.loginUserPic.setObjectName("loginUserPic")
        self.loginFormLayout.addWidget(self.loginUserPic, 0, 0, 1, 1)
        self.loginUserLineEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.loginUserLineEdit.setStyleSheet("QLineEdit {\n"
"    color: rgb(0, 0, 0);\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    border-color: rgb(207, 207, 207);\n"
"    background-color: rgb(246, 246, 246);\n"
"    margin: 5px;\n"
"    margin-right: 20px;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border-color: rgb(254, 140, 10);\n"
"    border-width: 2px;\n"
"}")
        self.loginUserLineEdit.setObjectName("loginUserLineEdit")
        self.loginFormLayout.addWidget(self.loginUserLineEdit, 0, 2, 1, 1)
        self.loginPassPic = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.loginPassPic.setStyleSheet("padding: 5px;\n"
"margin-left: 15px;")
        self.loginPassPic.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(str(("resources/lock.png"))), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.loginPassPic.setIcon(icon3)
        self.loginPassPic.setIconSize(QtCore.QSize(25, 25))
        self.loginPassPic.setObjectName("loginPassPic")
        self.loginFormLayout.addWidget(self.loginPassPic, 1, 0, 1, 1)
        self.loginVLayout.addLayout(self.loginFormLayout)
        self.loginButtonsHLayout = QtWidgets.QHBoxLayout()
        self.loginButtonsHLayout.setSpacing(0)
        self.loginButtonsHLayout.setObjectName("loginButtonsHLayout")
        self.registerBtn = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.registerBtn.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(8, 21, 63);\n"
"    background-color: rgb(255, 255, 255);\n"
"    padding: 15px;\n"
"    margin: 20px;\n"
"    margin-bottom: 40px;\n"
"    margin-right: 5px;\n"
"    border-radius: 5px;\n"
"    border-width: 1px;\n"
"    border-color: rgb(207, 207, 207);\n"
"    border-style: solid;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(246, 246, 246);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(230, 230, 230);\n"
"}")
        self.registerBtn.setObjectName("registerBtn")
        self.loginButtonsHLayout.addWidget(self.registerBtn)
        self.loginBtn = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.loginBtn.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    padding: 15px;\n"
"    margin: 20px;\n"
"    margin-bottom: 40px;\n"
"    margin-left: 5px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(27, 82, 246, 255), stop:1 rgba(91, 130, 248, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(32, 81, 227, 255), stop:1 rgba(71, 109, 224, 255));\n"
"}")
        self.loginBtn.setObjectName("loginBtn")
        self.loginButtonsHLayout.addWidget(self.loginBtn)
        self.loginVLayout.addLayout(self.loginButtonsHLayout)
        self.loginGrid.addWidget(self.loginWidget, 1, 1, 1, 1)
        self.loginGrey8 = QtWidgets.QFrame(self.gridLayoutWidget_2)
        self.loginGrey8.setStyleSheet("border-radius: 0px;")
        self.loginGrey8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.loginGrey8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.loginGrey8.setObjectName("loginGrey8")
        self.loginGrid.addWidget(self.loginGrey8, 2, 2, 1, 1)
        self.loginGrey7 = QtWidgets.QFrame(self.gridLayoutWidget_2)
        self.loginGrey7.setStyleSheet("border-radius: 0px;")
        self.loginGrey7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.loginGrey7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.loginGrey7.setObjectName("loginGrey7")
        self.loginGrid.addWidget(self.loginGrey7, 2, 1, 1, 1)
        self.loginGrey5 = QtWidgets.QFrame(self.gridLayoutWidget_2)
        self.loginGrey5.setStyleSheet("border-radius: 0px;")
        self.loginGrey5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.loginGrey5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.loginGrey5.setObjectName("loginGrey5")
        self.loginGrid.addWidget(self.loginGrey5, 1, 2, 1, 1)
        self.loginGrey3 = QtWidgets.QFrame(self.gridLayoutWidget_2)
        self.loginGrey3.setStyleSheet("border-radius: 0px;")
        self.loginGrey3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.loginGrey3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.loginGrey3.setObjectName("loginGrey3")
        self.loginGrid.addWidget(self.loginGrey3, 0, 2, 1, 1)
        self.loginGrey2 = QtWidgets.QFrame(self.gridLayoutWidget_2)
        self.loginGrey2.setStyleSheet("border-radius: 0px;")
        self.loginGrey2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.loginGrey2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.loginGrey2.setObjectName("loginGrey2")
        self.loginGrid.addWidget(self.loginGrey2, 0, 1, 1, 1)
        self.loginGrey1 = QtWidgets.QFrame(self.gridLayoutWidget_2)
        self.loginGrey1.setStyleSheet("border-radius: 0px;")
        self.loginGrey1.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.loginGrey1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.loginGrey1.setObjectName("loginGrey1")
        self.loginGrid.addWidget(self.loginGrey1, 0, 0, 1, 1)
        self.loginGrid.setColumnStretch(0, 100)
        self.loginGrid.setColumnStretch(1, 4)
        self.loginGrid.setColumnStretch(2, 100)
        self.loginGrid.setRowStretch(0, 100)
        self.loginGrid.setRowStretch(1, 5)
        self.loginGrid.setRowStretch(2, 100)
        self.stackedWidget.addWidget(self.loginPage)

        # Calendario page
        self.calendarioPage = QtWidgets.QWidget()
        self.calendarioPage.setObjectName("calendarioPage")
        self.gridLayoutWidget = QtWidgets.QWidget(self.calendarioPage)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 10, 801, 701))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.calendarioGrid = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.calendarioGrid.setContentsMargins(0, 0, 0, 0)
        self.calendarioGrid.setObjectName("calendarioGrid")
        self.calendarioGrey3 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.calendarioGrey3.setStyleSheet("border-radius: 0px;")
        self.calendarioGrey3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendarioGrey3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendarioGrey3.setObjectName("calendarioGrey3")
        self.calendarioGrid.addWidget(self.calendarioGrey3, 0, 2, 1, 1)
        self.calendarioGrey9 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.calendarioGrey9.setStyleSheet("border-radius: 0px;")
        self.calendarioGrey9.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendarioGrey9.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendarioGrey9.setObjectName("calendarioGrey9")
        self.calendarioGrid.addWidget(self.calendarioGrey9, 3, 0, 1, 1)
        self.calendarioGrey1 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.calendarioGrey1.setStyleSheet("border-radius: 0px;")
        self.calendarioGrey1.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendarioGrey1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendarioGrey1.setObjectName("calendarioGrey1")
        self.calendarioGrid.addWidget(self.calendarioGrey1, 0, 0, 1, 1)
        self.calendarioGrey6 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.calendarioGrey6.setStyleSheet("border-radius: 0px;")
        self.calendarioGrey6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendarioGrey6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendarioGrey6.setObjectName("calendarioGrey6")
        self.calendarioGrid.addWidget(self.calendarioGrey6, 2, 0, 1, 1)
        self.calendarioGrey4 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.calendarioGrey4.setStyleSheet("border-radius: 0px;")
        self.calendarioGrey4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendarioGrey4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendarioGrey4.setObjectName("calendarioGrey4")
        self.calendarioGrid.addWidget(self.calendarioGrey4, 1, 0, 1, 1)
        self.calendarioGrey2 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.calendarioGrey2.setStyleSheet("border-radius: 0px;")
        self.calendarioGrey2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendarioGrey2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendarioGrey2.setObjectName("calendarioGrey2")
        self.calendarioGrid.addWidget(self.calendarioGrey2, 0, 1, 1, 1)
        self.calendarioGrey5 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.calendarioGrey5.setStyleSheet("border-radius: 0px;")
        self.calendarioGrey5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendarioGrey5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendarioGrey5.setObjectName("calendarioGrey5")
        self.calendarioGrid.addWidget(self.calendarioGrey5, 1, 2, 1, 1)
        self.calendarioGrey11 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.calendarioGrey11.setStyleSheet("border-radius: 0px;")
        self.calendarioGrey11.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendarioGrey11.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendarioGrey11.setObjectName("calendarioGrey11")
        self.calendarioGrid.addWidget(self.calendarioGrey11, 4, 0, 1, 1)
        self.calendarioGrey7 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.calendarioGrey7.setStyleSheet("border-radius: 0px;")
        self.calendarioGrey7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendarioGrey7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendarioGrey7.setObjectName("calendarioGrey7")
        self.calendarioGrid.addWidget(self.calendarioGrey7, 2, 1, 1, 1)
        self.calendarioGrey8 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.calendarioGrey8.setStyleSheet("border-radius: 0px;")
        self.calendarioGrey8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendarioGrey8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendarioGrey8.setObjectName("calendarioGrey8")
        self.calendarioGrid.addWidget(self.calendarioGrey8, 2, 2, 1, 1)
        self.calendarioGrey10 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.calendarioGrey10.setStyleSheet("border-radius: 0px;")
        self.calendarioGrey10.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendarioGrey10.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendarioGrey10.setObjectName("calendarioGrey10")
        self.calendarioGrid.addWidget(self.calendarioGrey10, 3, 2, 1, 1)
        self.calendarioGrey12 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.calendarioGrey12.setStyleSheet("border-radius: 0px;")
        self.calendarioGrey12.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendarioGrey12.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendarioGrey12.setObjectName("calendarioGrey12")
        self.calendarioGrid.addWidget(self.calendarioGrey12, 4, 1, 1, 1)
        self.calendarioGrey13 = QtWidgets.QFrame(self.gridLayoutWidget)
        self.calendarioGrey13.setStyleSheet("border-radius: 0px;")
        self.calendarioGrey13.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendarioGrey13.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendarioGrey13.setObjectName("calendarioGrey13")
        self.calendarioGrid.addWidget(self.calendarioGrey13, 4, 2, 1, 1)
        self.calendarioMainWidget = QtWidgets.QWidget(self.gridLayoutWidget)
        self.calendarioMainWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.calendarioMainWidget.setObjectName("calendarioMainWidget")
        self.gridLayoutWidget_4 = QtWidgets.QWidget(self.calendarioMainWidget)
        self.gridLayoutWidget_4.setGeometry(QtCore.QRect(10, 10, 721, 591))
        self.gridLayoutWidget_4.setObjectName("gridLayoutWidget_4")
        self.calendarioMainGridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget_4)
        self.calendarioMainGridLayout.setContentsMargins(20, 20, 20, 20)
        self.calendarioMainGridLayout.setHorizontalSpacing(20)
        self.calendarioMainGridLayout.setObjectName("calendarioMainGridLayout")
        self.calendarioMainL3 = QtWidgets.QListWidget(self.gridLayoutWidget_4)
        self.calendarioMainL3.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-radius: 5px;\n"
"border-color: rgb(207, 207, 207);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
        self.calendarioMainL3.setSpacing(2)
        self.calendarioMainL3.setDragEnabled(True)
        self.calendarioMainL3.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.calendarioMainL3.setWordWrap(True)
        self.calendarioMainL3.setObjectName("calendarioMainL3")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainL3, 1, 2, 1, 1)
        self.calendarioMainD7 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.calendarioMainD7.setFont(font)
        self.calendarioMainD7.setStyleSheet("color: rgb(8, 21, 63);")
        self.calendarioMainD7.setAlignment(QtCore.Qt.AlignCenter)
        self.calendarioMainD7.setObjectName("calendarioMainD7")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainD7, 2, 2, 1, 1)
        self.calendarioMainD1 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.calendarioMainD1.setFont(font)
        self.calendarioMainD1.setStyleSheet("color: rgb(8, 21, 63);")
        self.calendarioMainD1.setAlignment(QtCore.Qt.AlignCenter)
        self.calendarioMainD1.setObjectName("calendarioMainD1")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainD1, 0, 0, 1, 1)
        self.calendarioMainD2 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.calendarioMainD2.setFont(font)
        self.calendarioMainD2.setStyleSheet("color: rgb(8, 21, 63);")
        self.calendarioMainD2.setAlignment(QtCore.Qt.AlignCenter)
        self.calendarioMainD2.setObjectName("calendarioMainD2")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainD2, 0, 1, 1, 1)
        self.calendarioMainD3 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.calendarioMainD3.setFont(font)
        self.calendarioMainD3.setStyleSheet("color: rgb(8, 21, 63);")
        self.calendarioMainD3.setAlignment(QtCore.Qt.AlignCenter)
        self.calendarioMainD3.setObjectName("calendarioMainD3")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainD3, 0, 2, 1, 1)
        self.calendarioMainD4 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.calendarioMainD4.setFont(font)
        self.calendarioMainD4.setStyleSheet("color: rgb(8, 21, 63);")
        self.calendarioMainD4.setAlignment(QtCore.Qt.AlignCenter)
        self.calendarioMainD4.setObjectName("calendarioMainD4")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainD4, 0, 3, 1, 1)
        self.calendarioMainL2 = QtWidgets.QListWidget(self.gridLayoutWidget_4)
        self.calendarioMainL2.setMinimumSize(QtCore.QSize(152, 202))
        self.calendarioMainL2.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-radius: 5px;\n"
"border-color: rgb(207, 207, 207);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
        self.calendarioMainL2.setSpacing(2)
        self.calendarioMainL2.setDragEnabled(True)
        self.calendarioMainL2.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.calendarioMainL2.setWordWrap(True)
        self.calendarioMainL2.setObjectName("calendarioMainL2")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainL2, 1, 1, 1, 1)
        self.calendarioMainL4 = QtWidgets.QListWidget(self.gridLayoutWidget_4)
        self.calendarioMainL4.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-radius: 5px;\n"
"border-color: rgb(207, 207, 207);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
        self.calendarioMainL4.setSpacing(2)
        self.calendarioMainL4.setDragEnabled(True)
        self.calendarioMainL4.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.calendarioMainL4.setWordWrap(True)
        self.calendarioMainL4.setObjectName("calendarioMainL4")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainL4, 1, 3, 1, 1)
        self.calendarioMainD5 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.calendarioMainD5.setFont(font)
        self.calendarioMainD5.setStyleSheet("color: rgb(8, 21, 63);")
        self.calendarioMainD5.setAlignment(QtCore.Qt.AlignCenter)
        self.calendarioMainD5.setObjectName("calendarioMainD5")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainD5, 2, 0, 1, 1)
        self.calendarioMainL1 = QtWidgets.QListWidget(self.gridLayoutWidget_4)
        self.calendarioMainL1.setMinimumSize(QtCore.QSize(152, 202))
        self.calendarioMainL1.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-radius: 5px;\n"
"border-color: rgb(207, 207, 207);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
        self.calendarioMainL1.setSpacing(2)
        self.calendarioMainL1.setDragEnabled(True)
        self.calendarioMainL1.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.calendarioMainL1.setWordWrap(True)
        self.calendarioMainL1.setObjectName("calendarioMainL1")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainL1, 1, 0, 1, 1)
        self.calendarioMainD6 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.calendarioMainD6.setFont(font)
        self.calendarioMainD6.setStyleSheet("color: rgb(8, 21, 63);")
        self.calendarioMainD6.setAlignment(QtCore.Qt.AlignCenter)
        self.calendarioMainD6.setObjectName("calendarioMainD6")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainD6, 2, 1, 1, 1)
        self.calendarioMainD8 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(16)
        self.calendarioMainD8.setFont(font)
        self.calendarioMainD8.setStyleSheet("color: rgb(151, 151, 151);")
        self.calendarioMainD8.setAlignment(QtCore.Qt.AlignCenter)
        self.calendarioMainD8.setObjectName("calendarioMainD8")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainD8, 2, 3, 1, 1)
        self.calendarioMainL5 = QtWidgets.QListWidget(self.gridLayoutWidget_4)
        self.calendarioMainL5.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-radius: 5px;\n"
"border-color: rgb(207, 207, 207);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
        self.calendarioMainL5.setSpacing(2)
        self.calendarioMainL5.setDragEnabled(True)
        self.calendarioMainL5.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.calendarioMainL5.setWordWrap(True)
        self.calendarioMainL5.setObjectName("calendarioMainL5")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainL5, 3, 0, 1, 1)
        self.calendarioMainL6 = QtWidgets.QListWidget(self.gridLayoutWidget_4)
        self.calendarioMainL6.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-radius: 5px;\n"
"border-color: rgb(207, 207, 207);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
        self.calendarioMainL6.setSpacing(2)
        self.calendarioMainL6.setDragEnabled(True)
        self.calendarioMainL6.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.calendarioMainL6.setWordWrap(True)
        self.calendarioMainL6.setObjectName("calendarioMainL6")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainL6, 3, 1, 1, 1)
        self.calendarioMainL7 = QtWidgets.QListWidget(self.gridLayoutWidget_4)
        self.calendarioMainL7.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-radius: 5px;\n"
"border-color: rgb(207, 207, 207);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
        self.calendarioMainL7.setSpacing(2)
        self.calendarioMainL7.setDragEnabled(True)
        self.calendarioMainL7.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.calendarioMainL7.setWordWrap(True)
        self.calendarioMainL7.setObjectName("calendarioMainL7")
        self.calendarioMainGridLayout.addWidget(self.calendarioMainL7, 3, 2, 1, 1)
        self.calendarioMainVLayout = QtWidgets.QVBoxLayout()
        self.calendarioMainVLayout.setObjectName("calendarioMainVLayout")
        self.calendarioMainVaciarExpl = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(11)
        self.calendarioMainVaciarExpl.setFont(font)
        self.calendarioMainVaciarExpl.setStyleSheet("color: rgb(151, 151, 151);\n"
"margin-top: 20px;\n"
"margin-bottom: 20px;")
        self.calendarioMainVaciarExpl.setAlignment(QtCore.Qt.AlignCenter)
        self.calendarioMainVaciarExpl.setWordWrap(True)
        self.calendarioMainVaciarExpl.setObjectName("calendarioMainVaciarExpl")
        self.calendarioMainVLayout.addWidget(self.calendarioMainVaciarExpl)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.calendarioMainVLayout.addItem(spacerItem)
        self.calendarioMainVaciarLabel = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.calendarioMainVaciarLabel.setStyleSheet("color: rgb(151, 151, 151);\n"
"margin-bottom: 10px;\n"
"margin-top: 10px;")
        self.calendarioMainVaciarLabel.setObjectName("calendarioMainVaciarLabel")
        self.calendarioMainVLayout.addWidget(self.calendarioMainVaciarLabel)
        self.calendarioMainCombo = QtWidgets.QComboBox(self.gridLayoutWidget_4)
        self.calendarioMainCombo.setStyleSheet("QComboBox {\n"
"    color: rgb(0, 0, 0);\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    border-color: rgb(207, 207, 207);\n"
"    background-color: rgb(246, 246, 246);\n"
"    padding: 5px;\n"
"    margin-bottom: 10px;\n"
"}\n"
"\n"
"QComboBox:focus {\n"
"    border-color: rgb(254, 140, 10);\n"
"    border-width: 2px;\n"
"}\n"
"QListView {\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    background-color: rgb(207, 207, 207);\n"
"    selection-color: rgb(246, 246, 246);\n"
"}\n"
"\n"
"QComboBox::drop-down:focus {\n"
"    background-color: rgb(254, 140, 10);\n"
"    selection-color: rgb(246, 246, 246);\n"
"}")
        self.calendarioMainCombo.setObjectName("calendarioMainCombo")
        self.calendarioMainCombo.addItem("")
        self.calendarioMainCombo.addItem("")
        self.calendarioMainCombo.addItem("")
        self.calendarioMainCombo.addItem("")
        self.calendarioMainCombo.addItem("")
        self.calendarioMainCombo.addItem("")
        self.calendarioMainCombo.addItem("")
        self.calendarioMainVLayout.addWidget(self.calendarioMainCombo)
        self.calendarioMainVaciarBtn = QtWidgets.QPushButton(self.gridLayoutWidget_4)
        self.calendarioMainVaciarBtn.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(254, 140, 10, 255), stop:1 rgba(255, 190, 94, 255));\n"
"    padding: 6.5px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(249, 137, 9, 255), stop:1 rgba(249, 186, 92, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(238, 131, 8, 255), stop:1 rgba(235, 175, 86, 255));\n"
"}")
        self.calendarioMainVaciarBtn.setObjectName("calendarioMainVaciarBtn")
        self.calendarioMainVLayout.addWidget(self.calendarioMainVaciarBtn)
        self.calendarioMainGridLayout.addLayout(self.calendarioMainVLayout, 3, 3, 1, 1)
        self.calendarioGrid.addWidget(self.calendarioMainWidget, 1, 1, 1, 1)
        self.calendarioAddWidget = QtWidgets.QWidget(self.gridLayoutWidget)
        self.calendarioAddWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.calendarioAddWidget.setObjectName("calendarioAddWidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.calendarioAddWidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 10, 721, 161))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.calendarioAddVLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.calendarioAddVLayout.setContentsMargins(0, 0, 0, 0)
        self.calendarioAddVLayout.setObjectName("calendarioAddVLayout")
        self.calendarioAddTitleHLayout = QtWidgets.QHBoxLayout()
        self.calendarioAddTitleHLayout.setObjectName("calendarioAddTitleHLayout")
        self.calendarioAddTitle = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.calendarioAddTitle.setFont(font)
        self.calendarioAddTitle.setStyleSheet("color: rgb(8, 21, 63);\n"
"padding: 2px;\n"
"margin-left: 15px;\n"
"margin-top: 20px;")
        self.calendarioAddTitle.setObjectName("calendarioAddTitle")
        self.calendarioAddTitleHLayout.addWidget(self.calendarioAddTitle)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.calendarioAddTitleHLayout.addItem(spacerItem1)
        self.calendarioAddBtn3 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.calendarioAddBtn3.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(254, 140, 10, 255), stop:1 rgba(255, 190, 94, 255));\n"
"    margin: 5px;\n"
"    margin-right: 20px;\n"
"    margin-top: 20px;\n"
"    padding: 6.5px;\n"
"    padding-left: 30px;\n"
"    padding-right: 30px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(249, 137, 9, 255), stop:1 rgba(249, 186, 92, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(238, 131, 8, 255), stop:1 rgba(235, 175, 86, 255));\n"
"}")
        self.calendarioAddBtn3.setObjectName("calendarioAddBtn3")
        self.calendarioAddTitleHLayout.addWidget(self.calendarioAddBtn3)
        self.calendarioAddVLayout.addLayout(self.calendarioAddTitleHLayout)
        self.calendarioAddForm = QtWidgets.QGridLayout()
        self.calendarioAddForm.setSpacing(0)
        self.calendarioAddForm.setObjectName("calendarioAddForm")
        self.calendarioAddLabel0 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.calendarioAddLabel0.setStyleSheet("color: rgb(151, 151, 151);\n"
"padding: 2px;\n"
"padding-bottom: 0px;\n"
"margin-left: 15px;")
        self.calendarioAddLabel0.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.calendarioAddLabel0.setObjectName("calendarioAddLabel0")
        self.calendarioAddForm.addWidget(self.calendarioAddLabel0, 3, 0, 1, 1)
        self.calendarioAddCombo1 = QtWidgets.QComboBox(self.verticalLayoutWidget)
        self.calendarioAddCombo1.setStyleSheet("QComboBox {\n"
"    color: rgb(0, 0, 0);\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    border-color: rgb(207, 207, 207);\n"
"    background-color: rgb(246, 246, 246);\n"
"    margin: 5px;\n"
"    margin-bottom: 20px;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QComboBox:focus {\n"
"    border-color: rgb(254, 140, 10);\n"
"    border-width: 2px;\n"
"}\n"
"QListView {\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    background-color: rgb(207, 207, 207);\n"
"    selection-color: rgb(246, 246, 246);\n"
"}\n"
"\n"
"QComboBox::drop-down:focus {\n"
"    background-color: rgb(254, 140, 10);\n"
"    selection-color: rgb(246, 246, 246);\n"
"}")
        self.calendarioAddCombo1.setObjectName("calendarioAddCombo1")
        self.calendarioAddCombo1.addItem("")
        self.calendarioAddCombo1.addItem("")
        self.calendarioAddCombo1.addItem("")
        self.calendarioAddCombo1.addItem("")
        self.calendarioAddCombo1.addItem("")
        self.calendarioAddCombo1.addItem("")
        self.calendarioAddCombo1.addItem("")
        self.calendarioAddForm.addWidget(self.calendarioAddCombo1, 4, 1, 1, 1)
        self.calendarioAddLabel1 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.calendarioAddLabel1.setStyleSheet("color: rgb(151, 151, 151);\n"
"padding: 2px;\n"
"padding-bottom: 0px;")
        self.calendarioAddLabel1.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.calendarioAddLabel1.setObjectName("calendarioAddLabel1")
        self.calendarioAddForm.addWidget(self.calendarioAddLabel1, 3, 1, 1, 1)
        self.calendarioAddLabel2 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.calendarioAddLabel2.setStyleSheet("color: rgb(151, 151, 151);\n"
"padding: 2px;\n"
"padding-bottom: 0px;")
        self.calendarioAddLabel2.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.calendarioAddLabel2.setObjectName("calendarioAddLabel2")
        self.calendarioAddForm.addWidget(self.calendarioAddLabel2, 3, 2, 1, 1)
        self.calendarioAddCombo2 = QtWidgets.QComboBox(self.verticalLayoutWidget)
        self.calendarioAddCombo2.setStyleSheet("QComboBox {\n"
"    color: rgb(0, 0, 0);\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    border-color: rgb(207, 207, 207);\n"
"    background-color: rgb(246, 246, 246);\n"
"    margin: 5px;\n"
"    margin-bottom: 20px;\n"
"    padding: 5px;\n"
"}\n"
"QListView {\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QComboBox:focus {\n"
"    border-color: rgb(254, 140, 10);\n"
"    border-width: 2px;\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    background-color: rgb(207, 207, 207);\n"
"    selection-color: rgb(246, 246, 246);\n"
"}\n"
"\n"
"QComboBox::drop-down:focus {\n"
"    background-color: rgb(254, 140, 10);\n"
"    selection-color: rgb(246, 246, 246);\n"
"}")
        self.calendarioAddCombo2.setObjectName("calendarioAddCombo2")
        self.calendarioAddForm.addWidget(self.calendarioAddCombo2, 4, 2, 1, 1)
        self.calendarioAddLineEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.calendarioAddLineEdit.setStyleSheet("QLineEdit {\n"
"    color: rgb(0, 0, 0);\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    border-color: rgb(207, 207, 207);\n"
"    background-color: rgb(246, 246, 246);\n"
"    margin: 5px;\n"
"    margin-bottom: 20px;\n"
"    margin-left: 20px;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border-color: rgb(254, 140, 10);\n"
"    border-width: 2px;\n"
"}")
        self.calendarioAddLineEdit.setObjectName("calendarioAddLineEdit")
        self.calendarioAddForm.addWidget(self.calendarioAddLineEdit, 4, 0, 1, 1)
        self.calendarioAddBtn1 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.calendarioAddBtn1.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    margin: 5px;\n"
"    margin-bottom: 20px;\n"
"    margin-right: 20px;\n"
"    padding: 6.5px;\n"
"    padding-left: 30px;\n"
"    padding-right: 30px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(27, 82, 246, 255), stop:1 rgba(91, 130, 248, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(32, 81, 227, 255), stop:1 rgba(71, 109, 224, 255));\n"
"}")
        self.calendarioAddBtn1.setObjectName("calendarioAddBtn1")
        self.calendarioAddForm.addWidget(self.calendarioAddBtn1, 4, 3, 1, 1)
        self.calendarioAddBtn2 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.calendarioAddBtn2.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    margin: 4px;\n"
"    margin-right: 19px;\n"
"    margin-bottom: 0px;\n"
"    padding: 6.5px;\n"
"    padding-left: 30px;\n"
"    padding-right: 30px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(27, 82, 246, 255), stop:1 rgba(91, 130, 248, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(32, 81, 227, 255), stop:1 rgba(71, 109, 224, 255));\n"
"}")
        self.calendarioAddBtn2.setObjectName("calendarioAddBtn2")
        self.calendarioAddForm.addWidget(self.calendarioAddBtn2, 3, 3, 1, 1)
        self.calendarioAddForm.setColumnStretch(0, 5)
        self.calendarioAddForm.setColumnStretch(2, 3)
        self.calendarioAddVLayout.addLayout(self.calendarioAddForm)
        self.calendarioGrid.addWidget(self.calendarioAddWidget, 3, 1, 1, 1)
        self.calendarioGrid.setColumnStretch(0, 1)
        self.calendarioGrid.setColumnStretch(1, 30)
        self.calendarioGrid.setColumnStretch(2, 1)
        self.calendarioGrid.setRowStretch(0, 1)
        self.calendarioGrid.setRowStretch(1, 14)
        self.calendarioGrid.setRowStretch(5, 1)
        self.stackedWidget.addWidget(self.calendarioPage)

        # Seguimiento page
        self.seguimientoPage = QtWidgets.QWidget()
        self.seguimientoPage.setObjectName("seguimientoPage")
        self.gridLayoutWidget_7 = QtWidgets.QWidget(self.seguimientoPage)
        self.gridLayoutWidget_7.setGeometry(QtCore.QRect(10, 10, 801, 701))
        self.gridLayoutWidget_7.setObjectName("gridLayoutWidget_7")
        self.seguimientoGrid = QtWidgets.QGridLayout(self.gridLayoutWidget_7)
        self.seguimientoGrid.setContentsMargins(0, 0, 0, 0)
        self.seguimientoGrid.setObjectName("seguimientoGrid")
        self.seguimientoGrey9 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey9.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey9.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey9.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey9.setObjectName("seguimientoGrey9")
        self.seguimientoGrid.addWidget(self.seguimientoGrey9, 3, 0, 1, 1)
        self.seguimientoGrey10 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey10.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey10.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey10.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey10.setObjectName("seguimientoGrey10")
        self.seguimientoGrid.addWidget(self.seguimientoGrey10, 3, 2, 1, 1)
        self.seguimientoGrey16 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey16.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey16.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey16.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey16.setObjectName("seguimientoGrey16")
        self.seguimientoGrid.addWidget(self.seguimientoGrey16, 6, 0, 1, 1)
        self.seguimientoMarkWidget = QtWidgets.QWidget(self.gridLayoutWidget_7)
        self.seguimientoMarkWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.seguimientoMarkWidget.setObjectName("seguimientoMarkWidget")
        self.verticalLayoutWidget_4 = QtWidgets.QWidget(self.seguimientoMarkWidget)
        self.verticalLayoutWidget_4.setGeometry(QtCore.QRect(0, 0, 741, 141))
        self.verticalLayoutWidget_4.setObjectName("verticalLayoutWidget_4")
        self.seguimientoMarkVLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_4)
        self.seguimientoMarkVLayout.setContentsMargins(20, 20, 20, 20)
        self.seguimientoMarkVLayout.setObjectName("seguimientoMarkVLayout")
        self.seguimientoMarkTitle = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.seguimientoMarkTitle.setFont(font)
        self.seguimientoMarkTitle.setStyleSheet("color: rgb(8, 21, 63);")
        self.seguimientoMarkTitle.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.seguimientoMarkTitle.setObjectName("seguimientoMarkTitle")
        self.seguimientoMarkVLayout.addWidget(self.seguimientoMarkTitle)
        self.seguimientoMarkForm = QtWidgets.QGridLayout()
        self.seguimientoMarkForm.setObjectName("seguimientoMarkForm")
        self.seguimientoMarkBtn = QtWidgets.QPushButton(self.verticalLayoutWidget_4)
        self.seguimientoMarkBtn.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 30px;\n"
"    padding-right: 30px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(27, 82, 246, 255), stop:1 rgba(91, 130, 248, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(32, 81, 227, 255), stop:1 rgba(71, 109, 224, 255));\n"
"}")
        self.seguimientoMarkBtn.setObjectName("seguimientoMarkBtn")
        self.seguimientoMarkForm.addWidget(self.seguimientoMarkBtn, 4, 3, 1, 1)
        self.seguimientoMarkCombo2 = QtWidgets.QComboBox(self.verticalLayoutWidget_4)
        self.seguimientoMarkCombo2.setStyleSheet("QComboBox {\n"
"    color: rgb(0, 0, 0);\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    border-color: rgb(207, 207, 207);\n"
"    background-color: rgb(246, 246, 246);\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QListView {\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"QComboBox:focus {\n"
"    border-color: rgb(254, 140, 10);\n"
"    border-width: 2px;\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    background-color: rgb(207, 207, 207);\n"
"    selection-color: rgb(246, 246, 246);\n"
"}\n"
"\n"
"QComboBox::drop-down:focus {\n"
"    background-color: rgb(254, 140, 10);\n"
"    selection-color: rgb(246, 246, 246);\n"
"}")
        self.seguimientoMarkCombo2.setObjectName("seguimientoMarkCombo2")
        self.seguimientoMarkCombo2.addItem("")
        self.seguimientoMarkCombo2.addItem("")
        self.seguimientoMarkForm.addWidget(self.seguimientoMarkCombo2, 4, 2, 1, 1)
        self.seguimientoMarkLabel1 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.seguimientoMarkLabel1.setStyleSheet("color: rgb(151, 151, 151);")
        self.seguimientoMarkLabel1.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.seguimientoMarkLabel1.setObjectName("seguimientoMarkLabel1")
        self.seguimientoMarkForm.addWidget(self.seguimientoMarkLabel1, 3, 0, 1, 1)
        self.seguimientoMarkLineEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.seguimientoMarkLineEdit.setStyleSheet("QLineEdit {\n"
"    color: rgb(0, 0, 0);\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    border-color: rgb(207, 207, 207);\n"
"    background-color: rgb(246, 246, 246);\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border-color: rgb(254, 140, 10);\n"
"    border-width: 2px;\n"
"}")
        self.seguimientoMarkLineEdit.setObjectName("seguimientoMarkLineEdit")
        self.seguimientoMarkForm.addWidget(self.seguimientoMarkLineEdit, 4, 0, 1, 1)
        self.seguimientoMarkLabel3 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.seguimientoMarkLabel3.setStyleSheet("color: rgb(151, 151, 151);")
        self.seguimientoMarkLabel3.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.seguimientoMarkLabel3.setObjectName("seguimientoMarkLabel3")
        self.seguimientoMarkForm.addWidget(self.seguimientoMarkLabel3, 3, 2, 1, 1)
        self.seguimientoMarkCombo1 = QtWidgets.QComboBox(self.verticalLayoutWidget_4)
        self.seguimientoMarkCombo1.setStyleSheet("QComboBox {\n"
"    color: rgb(0, 0, 0);\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    border-color: rgb(207, 207, 207);\n"
"    background-color: rgb(246, 246, 246);\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QComboBox:focus {\n"
"    border-color: rgb(254, 140, 10);\n"
"    border-width: 2px;\n"
"}\n"
"QListView {\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    background-color: rgb(207, 207, 207);\n"
"    selection-color: rgb(246, 246, 246);\n"
"}\n"
"\n"
"QComboBox::drop-down:focus {\n"
"    background-color: rgb(254, 140, 10);\n"
"    selection-color: rgb(246, 246, 246);\n"
"}")
        self.seguimientoMarkCombo1.setObjectName("seguimientoMarkCombo1")
        self.seguimientoMarkForm.addWidget(self.seguimientoMarkCombo1, 4, 1, 1, 1)
        self.seguimientoMarkLabel2 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.seguimientoMarkLabel2.setStyleSheet("color: rgb(151, 151, 151);")
        self.seguimientoMarkLabel2.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.seguimientoMarkLabel2.setObjectName("seguimientoMarkLabel2")
        self.seguimientoMarkForm.addWidget(self.seguimientoMarkLabel2, 3, 1, 1, 1)
        self.seguimientoMarkForm.setColumnStretch(0, 5)
        self.seguimientoMarkForm.setColumnStretch(1, 2)
        self.seguimientoMarkForm.setColumnStretch(2, 2)
        self.seguimientoMarkVLayout.addLayout(self.seguimientoMarkForm)
        self.seguimientoGrid.addWidget(self.seguimientoMarkWidget, 5, 1, 1, 1)
        self.seguimientoGrey2 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey2.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey2.setObjectName("seguimientoGrey2")
        self.seguimientoGrid.addWidget(self.seguimientoGrey2, 0, 1, 1, 1)
        self.seguimientoClassWidget = QtWidgets.QWidget(self.gridLayoutWidget_7)
        self.seguimientoClassWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.seguimientoClassWidget.setObjectName("seguimientoClassWidget")
        self.verticalLayoutWidget_6 = QtWidgets.QWidget(self.seguimientoClassWidget)
        self.verticalLayoutWidget_6.setGeometry(QtCore.QRect(0, 0, 741, 141))
        self.verticalLayoutWidget_6.setObjectName("verticalLayoutWidget_6")
        self.seguimientoClassVLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_6)
        self.seguimientoClassVLayout.setContentsMargins(20, 20, 20, 20)
        self.seguimientoClassVLayout.setObjectName("seguimientoClassVLayout")
        self.seguimientoClassTitle = QtWidgets.QLabel(self.verticalLayoutWidget_6)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.seguimientoClassTitle.setFont(font)
        self.seguimientoClassTitle.setStyleSheet("color: rgb(8, 21, 63);")
        self.seguimientoClassTitle.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.seguimientoClassTitle.setObjectName("seguimientoClassTitle")
        self.seguimientoClassVLayout.addWidget(self.seguimientoClassTitle)
        self.seguimientoClassForm = QtWidgets.QGridLayout()
        self.seguimientoClassForm.setObjectName("seguimientoClassForm")
        self.seguimientoClassLineEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget_6)
        self.seguimientoClassLineEdit.setStyleSheet("QLineEdit {\n"
"    color: rgb(0, 0, 0);\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    border-color: rgb(207, 207, 207);\n"
"    background-color: rgb(246, 246, 246);\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border-color: rgb(254, 140, 10);\n"
"    border-width: 2px;\n"
"}")
        self.seguimientoClassLineEdit.setObjectName("seguimientoClassLineEdit")
        self.seguimientoClassForm.addWidget(self.seguimientoClassLineEdit, 4, 0, 1, 1)
        self.seguimientoClassLabel1 = QtWidgets.QLabel(self.verticalLayoutWidget_6)
        self.seguimientoClassLabel1.setStyleSheet("color: rgb(151, 151, 151);")
        self.seguimientoClassLabel1.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.seguimientoClassLabel1.setObjectName("seguimientoClassLabel1")
        self.seguimientoClassForm.addWidget(self.seguimientoClassLabel1, 3, 0, 1, 1)
        self.seguimientoClassBtn1 = QtWidgets.QPushButton(self.verticalLayoutWidget_6)
        self.seguimientoClassBtn1.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 30px;\n"
"    padding-right: 30px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(27, 82, 246, 255), stop:1 rgba(91, 130, 248, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(32, 81, 227, 255), stop:1 rgba(71, 109, 224, 255));\n"
"}")
        self.seguimientoClassBtn1.setObjectName("seguimientoClassBtn1")
        self.seguimientoClassForm.addWidget(self.seguimientoClassBtn1, 4, 1, 1, 1)
        self.seguimientoClassForm.setColumnStretch(0, 5)
        self.seguimientoClassVLayout.addLayout(self.seguimientoClassForm)
        self.seguimientoGrid.addWidget(self.seguimientoClassWidget, 3, 1, 1, 1)
        self.seguimientoGrey7 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey7.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey7.setObjectName("seguimientoGrey7")
        self.seguimientoGrid.addWidget(self.seguimientoGrey7, 2, 1, 1, 1)
        self.seguimientoGrey4 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey4.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey4.setObjectName("seguimientoGrey4")
        self.seguimientoGrid.addWidget(self.seguimientoGrey4, 1, 0, 1, 1)
        self.seguimientoGrey5 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey5.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey5.setObjectName("seguimientoGrey5")
        self.seguimientoGrid.addWidget(self.seguimientoGrey5, 1, 2, 1, 1)
        self.seguimientoGrey8 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey8.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey8.setObjectName("seguimientoGrey8")
        self.seguimientoGrid.addWidget(self.seguimientoGrey8, 2, 2, 1, 1)
        self.seguimientoGrey3 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey3.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey3.setObjectName("seguimientoGrey3")
        self.seguimientoGrid.addWidget(self.seguimientoGrey3, 0, 2, 1, 1)
        self.seguimientoGrey1 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey1.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey1.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey1.setObjectName("seguimientoGrey1")
        self.seguimientoGrid.addWidget(self.seguimientoGrey1, 0, 0, 1, 1)
        self.seguimientoGrey6 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey6.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey6.setObjectName("seguimientoGrey6")
        self.seguimientoGrid.addWidget(self.seguimientoGrey6, 2, 0, 1, 1)
        self.seguimientoGrey11 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey11.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey11.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey11.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey11.setObjectName("seguimientoGrey11")
        self.seguimientoGrid.addWidget(self.seguimientoGrey11, 4, 0, 1, 1)
        self.seguimientoGrey18 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey18.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey18.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey18.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey18.setObjectName("seguimientoGrey18")
        self.seguimientoGrid.addWidget(self.seguimientoGrey18, 6, 2, 1, 1)
        self.seguimientoGrey15 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey15.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey15.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey15.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey15.setObjectName("seguimientoGrey15")
        self.seguimientoGrid.addWidget(self.seguimientoGrey15, 5, 2, 1, 1)
        self.seguimientoGrey17 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey17.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey17.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey17.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey17.setObjectName("seguimientoGrey17")
        self.seguimientoGrid.addWidget(self.seguimientoGrey17, 6, 1, 1, 1)
        self.seguimientoGrey13 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey13.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey13.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey13.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey13.setObjectName("seguimientoGrey13")
        self.seguimientoGrid.addWidget(self.seguimientoGrey13, 4, 2, 1, 1)
        self.seguimientoGrey14 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey14.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey14.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey14.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey14.setObjectName("seguimientoGrey14")
        self.seguimientoGrid.addWidget(self.seguimientoGrey14, 5, 0, 1, 1)
        self.seguimientoMainWidget = QtWidgets.QWidget(self.gridLayoutWidget_7)
        self.seguimientoMainWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.seguimientoMainWidget.setObjectName("seguimientoMainWidget")
        self.horizontalLayoutWidget_8 = QtWidgets.QWidget(self.seguimientoMainWidget)
        self.horizontalLayoutWidget_8.setGeometry(QtCore.QRect(0, 0, 741, 281))
        self.horizontalLayoutWidget_8.setObjectName("horizontalLayoutWidget_8")
        self.seguimientoMainHLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_8)
        self.seguimientoMainHLayout.setContentsMargins(0, 0, 0, 0)
        self.seguimientoMainHLayout.setSpacing(10)
        self.seguimientoMainHLayout.setObjectName("seguimientoMainHLayout")
        self.seguimientoMainVLayout1 = QtWidgets.QVBoxLayout()
        self.seguimientoMainVLayout1.setContentsMargins(20, 20, -1, 20)
        self.seguimientoMainVLayout1.setSpacing(0)
        self.seguimientoMainVLayout1.setObjectName("seguimientoMainVLayout1")
        self.seguimientoMainTitle = QtWidgets.QLabel(self.horizontalLayoutWidget_8)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setBold(True)
        font.setPointSize(16)
        self.seguimientoMainTitle.setFont(font)
        self.seguimientoMainTitle.setStyleSheet("color: rgb(8, 21, 63);\n"
"padding: 2px;")
        self.seguimientoMainTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.seguimientoMainTitle.setObjectName("seguimientoMainTitle")
        self.seguimientoMainVLayout1.addWidget(self.seguimientoMainTitle)
        self.seguimientoMainMark = QtWidgets.QLabel(self.horizontalLayoutWidget_8)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(80)
        self.seguimientoMainMark.setFont(font)
        self.seguimientoMainMark.setStyleSheet("color: rgb(8, 21, 63);")
        self.seguimientoMainMark.setAlignment(QtCore.Qt.AlignCenter)
        self.seguimientoMainMark.setObjectName("seguimientoMainMark")
        self.seguimientoMainVLayout1.addWidget(self.seguimientoMainMark)
        self.seguimientoMainSubtitle = QtWidgets.QLabel(self.horizontalLayoutWidget_8)
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(16)
        font.setItalic(True)
        self.seguimientoMainSubtitle.setFont(font)
        self.seguimientoMainSubtitle.setStyleSheet("color: rgb(8, 21, 63);\n"
"padding: 2px;")
        self.seguimientoMainSubtitle.setAlignment(QtCore.Qt.AlignCenter)
        self.seguimientoMainSubtitle.setObjectName("seguimientoMainSubtitle")
        self.seguimientoMainVLayout1.addWidget(self.seguimientoMainSubtitle)
        self.seguimientoMainHLayout.addLayout(self.seguimientoMainVLayout1)
        self.seguimientoMainVLayout2 = QtWidgets.QVBoxLayout()
        self.seguimientoMainVLayout2.setContentsMargins(-1, 20, 20, 20)
        self.seguimientoMainVLayout2.setObjectName("seguimientoMainVLayout2")
        self.seguimientoInMainWidget = QtWidgets.QWidget(self.horizontalLayoutWidget_8)
        self.seguimientoInMainWidget.setStyleSheet("background-color: rgb(8, 21, 63);\n"
"border-radius: 10px;")
        self.seguimientoInMainWidget.setObjectName("seguimientoInMainWidget")
        self.verticalLayoutWidget_9 = QtWidgets.QWidget(self.seguimientoInMainWidget)
        self.verticalLayoutWidget_9.setGeometry(QtCore.QRect(0, 0, 251, 241))
        self.verticalLayoutWidget_9.setObjectName("verticalLayoutWidget_9")
        self.seguimientoInMainVLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_9)
        self.seguimientoInMainVLayout.setContentsMargins(20, 20, 20, 20)
        self.seguimientoInMainVLayout.setObjectName("seguimientoInMainVLayout")
        self.seguimientoInMainTitle = QtWidgets.QLabel(self.verticalLayoutWidget_9)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.seguimientoInMainTitle.setFont(font)
        self.seguimientoInMainTitle.setStyleSheet("color: rgb(255, 255, 255);\n"
"padding: 2px;")
        self.seguimientoInMainTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.seguimientoInMainTitle.setObjectName("seguimientoInMainTitle")
        self.seguimientoInMainVLayout.addWidget(self.seguimientoInMainTitle)
        self.seguimientoInMainPrev1 = QtWidgets.QLabel(self.verticalLayoutWidget_9)
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(14)
        font.setItalic(True)
        self.seguimientoInMainPrev1.setFont(font)
        self.seguimientoInMainPrev1.setStyleSheet("color: rgb(255, 255, 255);")
        self.seguimientoInMainPrev1.setAlignment(QtCore.Qt.AlignCenter)
        self.seguimientoInMainPrev1.setObjectName("seguimientoInMainPrev1")
        self.seguimientoInMainVLayout.addWidget(self.seguimientoInMainPrev1)
        self.seguimientoInMainPrev2 = QtWidgets.QLabel(self.verticalLayoutWidget_9)
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(14)
        font.setItalic(True)
        self.seguimientoInMainPrev2.setFont(font)
        self.seguimientoInMainPrev2.setStyleSheet("color: rgb(255, 255, 255);")
        self.seguimientoInMainPrev2.setAlignment(QtCore.Qt.AlignCenter)
        self.seguimientoInMainPrev2.setObjectName("seguimientoInMainPrev2")
        self.seguimientoInMainVLayout.addWidget(self.seguimientoInMainPrev2)
        self.seguimientoInMainPrev3 = QtWidgets.QLabel(self.verticalLayoutWidget_9)
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(14)
        font.setItalic(True)
        self.seguimientoInMainPrev3.setFont(font)
        self.seguimientoInMainPrev3.setStyleSheet("color: rgb(255, 255, 255);")
        self.seguimientoInMainPrev3.setAlignment(QtCore.Qt.AlignCenter)
        self.seguimientoInMainPrev3.setObjectName("seguimientoInMainPrev3")
        self.seguimientoInMainVLayout.addWidget(self.seguimientoInMainPrev3)
        self.seguimientoInMainPrev4 = QtWidgets.QLabel(self.verticalLayoutWidget_9)
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(14)
        font.setItalic(True)
        self.seguimientoInMainPrev4.setFont(font)
        self.seguimientoInMainPrev4.setStyleSheet("color: rgb(255, 255, 255);\n"
"")
        self.seguimientoInMainPrev4.setAlignment(QtCore.Qt.AlignCenter)
        self.seguimientoInMainPrev4.setObjectName("seguimientoInMainPrev4")
        self.seguimientoInMainVLayout.addWidget(self.seguimientoInMainPrev4)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.seguimientoInMainVLayout.addItem(spacerItem2)
        self.seguimientoInMainHLayout = QtWidgets.QHBoxLayout()
        self.seguimientoInMainHLayout.setObjectName("seguimientoInMainHLayout")
        self.seguimientoInMainBtn1 = QtWidgets.QPushButton(self.verticalLayoutWidget_9)
        self.seguimientoInMainBtn1.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(254, 140, 10, 255), stop:1 rgba(255, 190, 94, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(249, 137, 9, 255), stop:1 rgba(249, 186, 92, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(238, 131, 8, 255), stop:1 rgba(235, 175, 86, 255));\n"
"}")
        self.seguimientoInMainBtn1.setObjectName("seguimientoInMainBtn1")
        self.seguimientoInMainHLayout.addWidget(self.seguimientoInMainBtn1)
        self.seguimientoInMainBtn2 = QtWidgets.QPushButton(self.verticalLayoutWidget_9)
        self.seguimientoInMainBtn2.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(27, 82, 246, 255), stop:1 rgba(91, 130, 248, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(32, 81, 227, 255), stop:1 rgba(71, 109, 224, 255));\n"
"}")
        self.seguimientoInMainBtn2.setObjectName("seguimientoInMainBtn2")
        self.seguimientoInMainHLayout.addWidget(self.seguimientoInMainBtn2)
        self.seguimientoInMainVLayout.addLayout(self.seguimientoInMainHLayout)
        self.seguimientoMainVLayout2.addWidget(self.seguimientoInMainWidget)
        self.seguimientoMainHLayout.addLayout(self.seguimientoMainVLayout2)
        self.seguimientoMainHLayout.setStretch(0, 5)
        self.seguimientoMainHLayout.setStretch(1, 3)
        self.seguimientoGrid.addWidget(self.seguimientoMainWidget, 1, 1, 1, 1)
        self.seguimientoGrey12 = QtWidgets.QFrame(self.gridLayoutWidget_7)
        self.seguimientoGrey12.setStyleSheet("border-radius: 0px;")
        self.seguimientoGrey12.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.seguimientoGrey12.setFrameShadow(QtWidgets.QFrame.Raised)
        self.seguimientoGrey12.setObjectName("seguimientoGrey12")
        self.seguimientoGrid.addWidget(self.seguimientoGrey12, 4, 1, 1, 1)
        self.seguimientoGrid.setColumnStretch(0, 1)
        self.seguimientoGrid.setColumnStretch(1, 30)
        self.seguimientoGrid.setColumnStretch(2, 1)
        self.seguimientoGrid.setRowStretch(0, 2)
        self.seguimientoGrid.setRowStretch(6, 2)
        self.stackedWidget.addWidget(self.seguimientoPage)

        # Búsqueda page
        self.busquedaPage = QtWidgets.QWidget()
        self.busquedaPage.setObjectName("busquedaPage")
        self.gridLayoutWidget_3 = QtWidgets.QWidget(self.busquedaPage)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(10, 10, 801, 701))
        self.gridLayoutWidget_3.setObjectName("gridLayoutWidget_3")
        self.busquedaGrid = QtWidgets.QGridLayout(self.gridLayoutWidget_3)
        self.busquedaGrid.setContentsMargins(0, 0, 0, 0)
        self.busquedaGrid.setObjectName("busquedaGrid")
        self.busquedaGrey1 = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.busquedaGrey1.setStyleSheet("border-radius: 0px;")
        self.busquedaGrey1.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.busquedaGrey1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.busquedaGrey1.setObjectName("busquedaGrey1")
        self.busquedaGrid.addWidget(self.busquedaGrey1, 0, 0, 1, 1)
        self.busquedaGrey8 = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.busquedaGrey8.setStyleSheet("border-radius: 0px;")
        self.busquedaGrey8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.busquedaGrey8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.busquedaGrey8.setObjectName("busquedaGrey8")
        self.busquedaGrid.addWidget(self.busquedaGrey8, 2, 2, 1, 1)
        self.busquedaGrey9 = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.busquedaGrey9.setStyleSheet("border-radius: 0px;")
        self.busquedaGrey9.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.busquedaGrey9.setFrameShadow(QtWidgets.QFrame.Raised)
        self.busquedaGrey9.setObjectName("busquedaGrey9")
        self.busquedaGrid.addWidget(self.busquedaGrey9, 3, 0, 1, 1)
        self.busquedaGrey4 = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.busquedaGrey4.setStyleSheet("border-radius: 0px;")
        self.busquedaGrey4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.busquedaGrey4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.busquedaGrey4.setObjectName("busquedaGrey4")
        self.busquedaGrid.addWidget(self.busquedaGrey4, 1, 0, 1, 1)
        self.busquedaGrey6 = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.busquedaGrey6.setStyleSheet("border-radius: 0px;")
        self.busquedaGrey6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.busquedaGrey6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.busquedaGrey6.setObjectName("busquedaGrey6")
        self.busquedaGrid.addWidget(self.busquedaGrey6, 2, 0, 1, 1)
        self.busquedaGrey2 = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.busquedaGrey2.setStyleSheet("border-radius: 0px;")
        self.busquedaGrey2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.busquedaGrey2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.busquedaGrey2.setObjectName("busquedaGrey2")
        self.busquedaGrid.addWidget(self.busquedaGrey2, 0, 1, 1, 1)
        self.busquedaGrey5 = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.busquedaGrey5.setStyleSheet("border-radius: 0px;")
        self.busquedaGrey5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.busquedaGrey5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.busquedaGrey5.setObjectName("busquedaGrey5")
        self.busquedaGrid.addWidget(self.busquedaGrey5, 1, 2, 1, 1)
        self.busquedaGrey3 = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.busquedaGrey3.setStyleSheet("border-radius: 0px;")
        self.busquedaGrey3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.busquedaGrey3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.busquedaGrey3.setObjectName("busquedaGrey3")
        self.busquedaGrid.addWidget(self.busquedaGrey3, 0, 2, 1, 1)
        self.busquedaGrey7 = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.busquedaGrey7.setStyleSheet("border-radius: 0px;")
        self.busquedaGrey7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.busquedaGrey7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.busquedaGrey7.setObjectName("busquedaGrey7")
        self.busquedaGrid.addWidget(self.busquedaGrey7, 2, 1, 1, 1)
        self.busquedaGrey11 = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.busquedaGrey11.setStyleSheet("border-radius: 0px;")
        self.busquedaGrey11.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.busquedaGrey11.setFrameShadow(QtWidgets.QFrame.Raised)
        self.busquedaGrey11.setObjectName("busquedaGrey11")
        self.busquedaGrid.addWidget(self.busquedaGrey11, 4, 0, 1, 1)
        self.busquedaGrey12 = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.busquedaGrey12.setStyleSheet("border-radius: 0px;")
        self.busquedaGrey12.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.busquedaGrey12.setFrameShadow(QtWidgets.QFrame.Raised)
        self.busquedaGrey12.setObjectName("busquedaGrey12")
        self.busquedaGrid.addWidget(self.busquedaGrey12, 4, 1, 1, 1)
        self.busquedaGrey13 = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.busquedaGrey13.setStyleSheet("border-radius: 0px;")
        self.busquedaGrey13.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.busquedaGrey13.setFrameShadow(QtWidgets.QFrame.Raised)
        self.busquedaGrey13.setObjectName("busquedaGrey13")
        self.busquedaGrid.addWidget(self.busquedaGrey13, 4, 2, 1, 1)
        self.busquedaSearchWidget = QtWidgets.QWidget(self.gridLayoutWidget_3)
        self.busquedaSearchWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.busquedaSearchWidget.setObjectName("busquedaSearchWidget")
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.busquedaSearchWidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(0, 0, 741, 71))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.busquedaSearchHLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.busquedaSearchHLayout.setContentsMargins(20, 20, 20, 20)
        self.busquedaSearchHLayout.setObjectName("busquedaSearchHLayout")
        self.busquedaSearchLineEdit = QtWidgets.QLineEdit(self.horizontalLayoutWidget_2)
        self.busquedaSearchLineEdit.setStyleSheet("QLineEdit {\n"
"    color: rgb(0, 0, 0);\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    border-color: rgb(207, 207, 207);\n"
"    background-color: rgb(246, 246, 246);\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border-color: rgb(254, 140, 10);\n"
"    border-width: 2px;\n"
"}")
        self.busquedaSearchLineEdit.setObjectName("busquedaSearchLineEdit")
        self.busquedaSearchHLayout.addWidget(self.busquedaSearchLineEdit)
        self.busquedaSearchBtn = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.busquedaSearchBtn.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(27, 82, 246, 255), stop:1 rgba(91, 130, 248, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(32, 81, 227, 255), stop:1 rgba(71, 109, 224, 255));\n"
"}")
        self.busquedaSearchBtn.setObjectName("busquedaSearchBtn")
        self.busquedaSearchHLayout.addWidget(self.busquedaSearchBtn)
        self.busquedaGrid.addWidget(self.busquedaSearchWidget, 1, 1, 1, 1)
        self.busquedaResultsWidget = QtWidgets.QWidget(self.gridLayoutWidget_3)
        self.busquedaResultsWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.busquedaResultsWidget.setObjectName("busquedaResultsWidget")
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.busquedaResultsWidget)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(0, 0, 741, 561))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.busquedaResultsVLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.busquedaResultsVLayout.setContentsMargins(20, 20, 20, 20)
        self.busquedaResultsVLayout.setObjectName("busquedaResultsVLayout")
        self.busquedaResultsList = QtWidgets.QListWidget(self.verticalLayoutWidget_3)
        self.busquedaResultsList.setMinimumSize(QtCore.QSize(502, 402))
        self.busquedaResultsList.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-radius: 5px;\n"
"border-color: rgb(207, 207, 207);\n"
"min-width: 500;\n"
"min-height: 400;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(8, 21, 63);\n"
"color: rgb(255, 255, 255);\n"
"}")
        self.busquedaResultsList.setWordWrap(True)
        self.busquedaResultsList.setSpacing(2)
        self.busquedaResultsList.setObjectName("busquedaResultsList")
        self.busquedaResultsVLayout.addWidget(self.busquedaResultsList)
        self.busquedaGrid.addWidget(self.busquedaResultsWidget, 3, 1, 1, 1)
        self.busquedaGrey10 = QtWidgets.QFrame(self.gridLayoutWidget_3)
        self.busquedaGrey10.setStyleSheet("border-radius: 0px;")
        self.busquedaGrey10.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.busquedaGrey10.setFrameShadow(QtWidgets.QFrame.Raised)
        self.busquedaGrey10.setObjectName("busquedaGrey10")
        self.busquedaGrid.addWidget(self.busquedaGrey10, 3, 2, 1, 1)
        self.busquedaGrid.setColumnStretch(0, 1)
        self.busquedaGrid.setColumnStretch(1, 30)
        self.busquedaGrid.setColumnStretch(2, 1)
        self.busquedaGrid.setRowStretch(0, 2)
        self.busquedaGrid.setRowStretch(1, 2)
        self.busquedaGrid.setRowStretch(3, 30)
        self.busquedaGrid.setRowStretch(4, 2)
        self.stackedWidget.addWidget(self.busquedaPage)

        # User page
        self.userPage = QtWidgets.QWidget()
        self.userPage.setObjectName("userPage")
        self.gridLayoutWidget_6 = QtWidgets.QWidget(self.userPage)
        self.gridLayoutWidget_6.setGeometry(QtCore.QRect(10, 10, 801, 701))
        self.gridLayoutWidget_6.setObjectName("gridLayoutWidget_6")
        self.userGrid = QtWidgets.QGridLayout(self.gridLayoutWidget_6)
        self.userGrid.setContentsMargins(0, 0, 0, 0)
        self.userGrid.setObjectName("userGrid")
        self.userGrey3 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey3.setStyleSheet("border-radius: 0px;")
        self.userGrey3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey3.setObjectName("userGrey3")
        self.userGrid.addWidget(self.userGrey3, 0, 2, 1, 1)
        self.userGrey6 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey6.setStyleSheet("border-radius: 0px;")
        self.userGrey6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey6.setObjectName("userGrey6")
        self.userGrid.addWidget(self.userGrey6, 2, 0, 1, 1)
        self.userGrey5 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey5.setStyleSheet("border-radius: 0px;")
        self.userGrey5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey5.setObjectName("userGrey5")
        self.userGrid.addWidget(self.userGrey5, 1, 2, 1, 1)
        self.userGrey8 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey8.setStyleSheet("border-radius: 0px;")
        self.userGrey8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey8.setObjectName("userGrey8")
        self.userGrid.addWidget(self.userGrey8, 2, 2, 1, 1)
        self.userGrey12 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey12.setStyleSheet("border-radius: 0px;")
        self.userGrey12.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey12.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey12.setObjectName("userGrey12")
        self.userGrid.addWidget(self.userGrey12, 4, 1, 1, 1)
        self.userGrey9 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey9.setStyleSheet("border-radius: 0px;")
        self.userGrey9.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey9.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey9.setObjectName("userGrey9")
        self.userGrid.addWidget(self.userGrey9, 3, 0, 1, 1)
        self.userGrey7 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey7.setStyleSheet("border-radius: 0px;")
        self.userGrey7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey7.setObjectName("userGrey7")
        self.userGrid.addWidget(self.userGrey7, 2, 1, 1, 1)
        self.userGrey13 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey13.setStyleSheet("border-radius: 0px;")
        self.userGrey13.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey13.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey13.setObjectName("userGrey13")
        self.userGrid.addWidget(self.userGrey13, 4, 2, 1, 1)
        self.userGrey2 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey2.setStyleSheet("border-radius: 0px;")
        self.userGrey2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey2.setObjectName("userGrey2")
        self.userGrid.addWidget(self.userGrey2, 0, 1, 1, 1)
        self.userGrey14 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey14.setStyleSheet("border-radius: 0px;")
        self.userGrey14.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey14.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey14.setObjectName("userGrey14")
        self.userGrid.addWidget(self.userGrey14, 5, 0, 1, 1)
        self.userGrey1 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey1.setStyleSheet("border-radius: 0px;")
        self.userGrey1.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey1.setObjectName("userGrey1")
        self.userGrid.addWidget(self.userGrey1, 0, 0, 1, 1)
        self.userGrey4 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey4.setStyleSheet("border-radius: 0px;")
        self.userGrey4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey4.setObjectName("userGrey4")
        self.userGrid.addWidget(self.userGrey4, 1, 0, 1, 1)
        self.userGrey10 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey10.setStyleSheet("border-radius: 0px;")
        self.userGrey10.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey10.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey10.setObjectName("userGrey10")
        self.userGrid.addWidget(self.userGrey10, 3, 2, 1, 1)
        self.userGrey11 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey11.setStyleSheet("border-radius: 0px;")
        self.userGrey11.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey11.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey11.setObjectName("userGrey11")
        self.userGrid.addWidget(self.userGrey11, 4, 0, 1, 1)
        self.userGrey15 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey15.setStyleSheet("border-radius: 0px;")
        self.userGrey15.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey15.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey15.setObjectName("userGrey15")
        self.userGrid.addWidget(self.userGrey15, 5, 2, 1, 1)
        self.userGrey16 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey16.setStyleSheet("border-radius: 0px;")
        self.userGrey16.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey16.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey16.setObjectName("userGrey16")
        self.userGrid.addWidget(self.userGrey16, 6, 0, 1, 1)
        self.userGrey17 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey17.setStyleSheet("border-radius: 0px;")
        self.userGrey17.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey17.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey17.setObjectName("userGrey17")
        self.userGrid.addWidget(self.userGrey17, 6, 1, 1, 1)
        self.userGrey18 = QtWidgets.QFrame(self.gridLayoutWidget_6)
        self.userGrey18.setStyleSheet("border-radius: 0px;")
        self.userGrey18.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.userGrey18.setFrameShadow(QtWidgets.QFrame.Raised)
        self.userGrey18.setObjectName("userGrey18")
        self.userGrid.addWidget(self.userGrey18, 6, 2, 1, 1)
        self.userMainWidget = QtWidgets.QWidget(self.gridLayoutWidget_6)
        self.userMainWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.userMainWidget.setObjectName("userMainWidget")
        self.horizontalLayoutWidget_4 = QtWidgets.QWidget(self.userMainWidget)
        self.horizontalLayoutWidget_4.setGeometry(QtCore.QRect(0, 0, 741, 231))
        self.horizontalLayoutWidget_4.setObjectName("horizontalLayoutWidget_4")
        self.userMainHLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_4)
        self.userMainHLayout.setContentsMargins(20, 20, 20, 20)
        self.userMainHLayout.setObjectName("userMainHLayout")
        self.userMainProfilePic = QtWidgets.QPushButton(self.horizontalLayoutWidget_4)
        self.userMainProfilePic.setText("")
        self.userMainProfilePic.setIcon(icon1)
        self.userMainProfilePic.setIconSize(QtCore.QSize(160, 160))
        self.userMainProfilePic.setObjectName("userMainProfilePic")
        self.userMainHLayout.addWidget(self.userMainProfilePic)
        self.userMainVLayout = QtWidgets.QVBoxLayout()
        self.userMainVLayout.setSpacing(0)
        self.userMainVLayout.setObjectName("userMainVLayout")
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.userMainVLayout.addItem(spacerItem3)
        self.userMainVHLayout = QtWidgets.QHBoxLayout()
        self.userMainVHLayout.setObjectName("userMainVHLayout")
        self.userMainVHLayout.setSpacing(6)
        self.userMainNameLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(26)
        self.userMainNameLabel.setFont(font)
        self.userMainNameLabel.setStyleSheet("color: rgb(8, 21, 63);\n"
"padding: 2px;\n"
"margin-left: 5px;")
        self.userMainNameLabel.setObjectName("userMainNameLabel")
        self.userMainVHLayout.addWidget(self.userMainNameLabel)
        self.userMainVariableBtn = QtWidgets.QPushButton(self.horizontalLayoutWidget_4)
        self.userMainVariableBtn.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(27, 82, 246, 255), stop:1 rgba(91, 130, 248, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(32, 81, 227, 255), stop:1 rgba(71, 109, 224, 255));\n"
"}")
        self.userMainVariableBtn.setObjectName("userMainVariableBtn")
        self.userMainVHLayout.addWidget(self.userMainVariableBtn)
        self.userMainCourseBtn = QtWidgets.QPushButton(self.horizontalLayoutWidget_4)
        self.userMainCourseBtn.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(254, 140, 10, 255), stop:1 rgba(255, 190, 94, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(249, 137, 9, 255), stop:1 rgba(249, 186, 92, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(238, 131, 8, 255), stop:1 rgba(235, 175, 86, 255));\n"
"}")
        self.userMainCourseBtn.setObjectName("userMainCourseBtn")
        self.userMainVHLayout.addWidget(self.userMainCourseBtn)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.userMainVHLayout.addItem(spacerItem4)
        self.userMainVHLayout.setStretch(3, 1)
        self.userMainVLayout.addLayout(self.userMainVHLayout)
        self.userMainFriendsLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_4)
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(20)
        self.userMainFriendsLabel.setFont(font)
        self.userMainFriendsLabel.setStyleSheet("color: rgb(151, 151, 151);\n"
"padding: 2px;\n"
"margin-left: 10px;")
        self.userMainFriendsLabel.setObjectName("userMainFriendsLabel")
        self.userMainVLayout.addWidget(self.userMainFriendsLabel)
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.userMainVLayout.addItem(spacerItem5)
        self.userMainHLayout.addLayout(self.userMainVLayout)
        self.userMainHLayout.setStretch(1, 1)
        self.userGrid.addWidget(self.userMainWidget, 1, 1, 1, 1)
        self.userPickerWidget = QtWidgets.QWidget(self.gridLayoutWidget_6)
        self.userPickerWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.userPickerWidget.setObjectName("userPickerWidget")
        self.horizontalLayoutWidget_6 = QtWidgets.QWidget(self.userPickerWidget)
        self.horizontalLayoutWidget_6.setGeometry(QtCore.QRect(0, 0, 741, 121))
        self.horizontalLayoutWidget_6.setObjectName("horizontalLayoutWidget_6")
        self.userPickerHLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_6)
        self.userPickerHLayout.setContentsMargins(20, 20, 20, 20)
        self.userPickerHLayout.setObjectName("userPickerHLayout")
        self.userPickerLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_6)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.userPickerLabel.setFont(font)
        self.userPickerLabel.setStyleSheet("color: rgb(151, 151, 151);\n"
"padding: 20px;")
        self.userPickerLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.userPickerLabel.setWordWrap(True)
        self.userPickerLabel.setObjectName("userPickerLabel")
        self.userPickerHLayout.addWidget(self.userPickerLabel)
        self.userPickerBtn1 = QtWidgets.QPushButton(self.horizontalLayoutWidget_6)
        self.userPickerBtn1.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(27, 82, 246, 255), stop:1 rgba(91, 130, 248, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(32, 81, 227, 255), stop:1 rgba(71, 109, 224, 255));\n"
"}")
        self.userPickerBtn1.setText("")
        self.userPickerBtn1.setObjectName("userPickerBtn1")
        self.userPickerHLayout.addWidget(self.userPickerBtn1)
        self.userPickerBtn2 = QtWidgets.QPushButton(self.horizontalLayoutWidget_6)
        self.userPickerBtn2.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(20, 161, 109, 255), stop:1 rgba(148, 224, 152, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(19, 157, 106, 255), stop:1 rgba(144, 218, 148, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(18, 146, 98, 255), stop:1 rgba(132, 201, 136, 255));\n"
"}")
        self.userPickerBtn2.setText("")
        self.userPickerBtn2.setObjectName("userPickerBtn2")
        self.userPickerHLayout.addWidget(self.userPickerBtn2)
        self.userPickerBtn3 = QtWidgets.QPushButton(self.horizontalLayoutWidget_6)
        self.userPickerBtn3.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(98, 33, 170, 255), stop:1 rgba(153, 73, 255, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(92, 31, 160, 255), stop:1 rgba(145, 69, 241, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(87, 29, 152, 255), stop:1 rgba(135, 64, 226, 255));\n"
"}")
        self.userPickerBtn3.setText("")
        self.userPickerBtn3.setObjectName("userPickerBtn3")
        self.userPickerHLayout.addWidget(self.userPickerBtn3)
        self.userPickerBtn4 = QtWidgets.QPushButton(self.horizontalLayoutWidget_6)
        self.userPickerBtn4.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(170, 33, 33, 255), stop:1 rgba(255, 111, 73, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(163, 31, 31, 255), stop:1 rgba(245, 106, 70, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(153, 29, 29, 255), stop:1 rgba(230, 100, 66, 255));\n"
"}")
        self.userPickerBtn4.setText("")
        self.userPickerBtn4.setObjectName("userPickerBtn4")
        self.userPickerHLayout.addWidget(self.userPickerBtn4)
        self.userPickerBtn5 = QtWidgets.QPushButton(self.horizontalLayoutWidget_6)
        self.userPickerBtn5.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(254, 140, 10, 255), stop:1 rgba(255, 190, 94, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(249, 137, 9, 255), stop:1 rgba(249, 186, 92, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(238, 131, 8, 255), stop:1 rgba(235, 175, 86, 255));\n"
"}")
        self.userPickerBtn5.setText("")
        self.userPickerBtn5.setObjectName("userPickerBtn5")
        self.userPickerHLayout.addWidget(self.userPickerBtn5)
        self.userPickerHLayout.setStretch(0, 1)
        self.userGrid.addWidget(self.userPickerWidget, 3, 1, 1, 1)
        self.userFriendsWidget = QtWidgets.QWidget(self.gridLayoutWidget_6)
        self.userFriendsWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.userFriendsWidget.setObjectName("userFriendsWidget")
        self.horizontalLayoutWidget_7 = QtWidgets.QWidget(self.userFriendsWidget)
        self.horizontalLayoutWidget_7.setGeometry(QtCore.QRect(0, 0, 741, 231))
        self.horizontalLayoutWidget_7.setObjectName("horizontalLayoutWidget_7")
        self.userFriendsHLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_7)
        self.userFriendsHLayout.setContentsMargins(0, 0, 0, 0)
        self.userFriendsHLayout.setObjectName("userFriendsHLayout")
        self.userFriendsVLayout1 = QtWidgets.QVBoxLayout()
        self.userFriendsVLayout1.setContentsMargins(20, 20, 4, 20)
        self.userFriendsVLayout1.setObjectName("userFriendsVLayout1")
        self.userFriendsLabel1 = QtWidgets.QLabel(self.horizontalLayoutWidget_7)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.userFriendsLabel1.setFont(font)
        self.userFriendsLabel1.setStyleSheet("color: rgb(8, 21, 63);")
        self.userFriendsLabel1.setObjectName("userFriendsLabel1")
        self.userFriendsVLayout1.addWidget(self.userFriendsLabel1)
        self.userFriendsList1 = QtWidgets.QListWidget(self.horizontalLayoutWidget_7)
        self.userFriendsList1.setMinimumSize(QtCore.QSize(302, 152))
        self.userFriendsList1.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-radius: 5px;\n"
"border-color: rgb(207, 207, 207);\n"
"min-width: 400;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(8, 21, 63);\n"
"color: rgb(255, 255, 255);\n"
"}")
        self.userFriendsList1.setSpacing(2)
        self.userFriendsList1.setWordWrap(True)
        self.userFriendsList1.setObjectName("userFriendsList1")
        self.userFriendsVLayout1.addWidget(self.userFriendsList1)
        self.userFriendsHLayout.addLayout(self.userFriendsVLayout1)
        self.userFriendsVLayout2 = QtWidgets.QVBoxLayout()
        self.userFriendsVLayout2.setContentsMargins(4, 20, 20, 20)
        self.userFriendsVLayout2.setObjectName("userFriendsVLayout2")
        self.userFriendsLabel2 = QtWidgets.QLabel(self.horizontalLayoutWidget_7)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.userFriendsLabel2.setFont(font)
        self.userFriendsLabel2.setStyleSheet("color: rgb(8, 21, 63);")
        self.userFriendsLabel2.setObjectName("userFriendsLabel2")
        self.userFriendsVLayout2.addWidget(self.userFriendsLabel2)
        self.userFriendsList2 = QtWidgets.QListWidget(self.horizontalLayoutWidget_7)
        self.userFriendsList2.setMinimumSize(QtCore.QSize(302, 0))
        self.userFriendsList2.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-radius: 5px;\n"
"border-color: rgb(207, 207, 207);\n"
"min-width: 400;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(8, 21, 63);\n"
"color: rgb(255, 255, 255);\n"
"}")
        self.userFriendsList2.setSpacing(2)
        self.userFriendsList2.setWordWrap(True)
        self.userFriendsList2.setObjectName("userFriendsList2")
        self.userFriendsVLayout2.addWidget(self.userFriendsList2)
        self.userFriendsVHLayout = QtWidgets.QHBoxLayout()
        self.userFriendsVHLayout.setObjectName("userFriendsVHLayout")
        self.userFriendsAcceptBtn = QtWidgets.QPushButton(self.horizontalLayoutWidget_7)
        self.userFriendsAcceptBtn.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(27, 82, 246, 255), stop:1 rgba(91, 130, 248, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(32, 81, 227, 255), stop:1 rgba(71, 109, 224, 255));\n"
"}")
        self.userFriendsAcceptBtn.setObjectName("userFriendsAcceptBtn")
        self.userFriendsVHLayout.addWidget(self.userFriendsAcceptBtn)
        self.userFriendsDeclineBtn = QtWidgets.QPushButton(self.horizontalLayoutWidget_7)
        self.userFriendsDeclineBtn.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(254, 140, 10, 255), stop:1 rgba(255, 190, 94, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(249, 137, 9, 255), stop:1 rgba(249, 186, 92, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(238, 131, 8, 255), stop:1 rgba(235, 175, 86, 255));\n"
"}")
        self.userFriendsDeclineBtn.setObjectName("userFriendsDeclineBtn")
        self.userFriendsVHLayout.addWidget(self.userFriendsDeclineBtn)
        self.userFriendsVLayout2.addLayout(self.userFriendsVHLayout)
        self.userFriendsHLayout.addLayout(self.userFriendsVLayout2)
        self.userGrid.addWidget(self.userFriendsWidget, 5, 1, 1, 1)
        self.userGrid.setColumnStretch(0, 1)
        self.userGrid.setColumnStretch(2, 1)
        self.userGrid.setRowStretch(0, 2)
        self.userGrid.setRowStretch(6, 2)
        self.stackedWidget.addWidget(self.userPage)

        # Account page
        self.accountPage = QtWidgets.QWidget()
        self.accountPage.setObjectName("accountPage")
        self.gridLayoutWidget_5 = QtWidgets.QWidget(self.accountPage)
        self.gridLayoutWidget_5.setGeometry(QtCore.QRect(10, 10, 801, 701))
        self.gridLayoutWidget_5.setObjectName("gridLayoutWidget_5")
        self.accountGrid = QtWidgets.QGridLayout(self.gridLayoutWidget_5)
        self.accountGrid.setContentsMargins(0, 0, 0, 0)
        self.accountGrid.setObjectName("accountGrid")
        self.accountGrey3 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey3.setStyleSheet("border-radius: 0px;")
        self.accountGrey3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey3.setObjectName("accountGrey3")
        self.accountGrid.addWidget(self.accountGrey3, 0, 2, 1, 1)
        self.accountGrey6 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey6.setStyleSheet("border-radius: 0px;")
        self.accountGrey6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey6.setObjectName("accountGrey6")
        self.accountGrid.addWidget(self.accountGrey6, 2, 0, 1, 1)
        self.accountGrey5 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey5.setStyleSheet("border-radius: 0px;")
        self.accountGrey5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey5.setObjectName("accountGrey5")
        self.accountGrid.addWidget(self.accountGrey5, 1, 2, 1, 1)
        self.accountGrey8 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey8.setStyleSheet("border-radius: 0px;")
        self.accountGrey8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey8.setObjectName("accountGrey8")
        self.accountGrid.addWidget(self.accountGrey8, 2, 2, 1, 1)
        self.accountGrey12 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey12.setStyleSheet("border-radius: 0px;")
        self.accountGrey12.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey12.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey12.setObjectName("accountGrey12")
        self.accountGrid.addWidget(self.accountGrey12, 4, 1, 1, 1)
        self.accountGrey9 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey9.setStyleSheet("border-radius: 0px;")
        self.accountGrey9.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey9.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey9.setObjectName("accountGrey9")
        self.accountGrid.addWidget(self.accountGrey9, 3, 0, 1, 1)
        self.accountGrey7 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey7.setStyleSheet("border-radius: 0px;")
        self.accountGrey7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey7.setObjectName("accountGrey7")
        self.accountGrid.addWidget(self.accountGrey7, 2, 1, 1, 1)
        self.accountGrey13 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey13.setStyleSheet("border-radius: 0px;")
        self.accountGrey13.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey13.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey13.setObjectName("accountGrey13")
        self.accountGrid.addWidget(self.accountGrey13, 4, 2, 1, 1)
        self.accountGrey2 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey2.setStyleSheet("border-radius: 0px;")
        self.accountGrey2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey2.setObjectName("accountGrey2")
        self.accountGrid.addWidget(self.accountGrey2, 0, 1, 1, 1)
        self.accountGrey14 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey14.setStyleSheet("border-radius: 0px;")
        self.accountGrey14.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey14.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey14.setObjectName("accountGrey14")
        self.accountGrid.addWidget(self.accountGrey14, 5, 0, 1, 1)
        self.accountGrey1 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey1.setStyleSheet("border-radius: 0px;")
        self.accountGrey1.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey1.setObjectName("accountGrey1")
        self.accountGrid.addWidget(self.accountGrey1, 0, 0, 1, 1)
        self.accountGrey4 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey4.setStyleSheet("border-radius: 0px;")
        self.accountGrey4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey4.setObjectName("accountGrey4")
        self.accountGrid.addWidget(self.accountGrey4, 1, 0, 1, 1)
        self.accountGrey10 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey10.setStyleSheet("border-radius: 0px;")
        self.accountGrey10.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey10.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey10.setObjectName("accountGrey10")
        self.accountGrid.addWidget(self.accountGrey10, 3, 2, 1, 1)
        self.accountGrey11 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey11.setStyleSheet("border-radius: 0px;")
        self.accountGrey11.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey11.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey11.setObjectName("accountGrey11")
        self.accountGrid.addWidget(self.accountGrey11, 4, 0, 1, 1)
        self.accountGrey15 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey15.setStyleSheet("border-radius: 0px;")
        self.accountGrey15.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey15.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey15.setObjectName("accountGrey15")
        self.accountGrid.addWidget(self.accountGrey15, 5, 2, 1, 1)
        self.accountGrey16 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey16.setStyleSheet("border-radius: 0px;")
        self.accountGrey16.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey16.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey16.setObjectName("accountGrey16")
        self.accountGrid.addWidget(self.accountGrey16, 6, 0, 1, 1)
        self.accountGrey17 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey17.setStyleSheet("border-radius: 0px;")
        self.accountGrey17.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey17.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey17.setObjectName("accountGrey17")
        self.accountGrid.addWidget(self.accountGrey17, 6, 1, 1, 1)
        self.accountGrey18 = QtWidgets.QFrame(self.gridLayoutWidget_5)
        self.accountGrey18.setStyleSheet("border-radius: 0px;")
        self.accountGrey18.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.accountGrey18.setFrameShadow(QtWidgets.QFrame.Raised)
        self.accountGrey18.setObjectName("accountGrey18")
        self.accountGrid.addWidget(self.accountGrey18, 6, 2, 1, 1)
        self.accountMainWidget = QtWidgets.QWidget(self.gridLayoutWidget_5)
        self.accountMainWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.accountMainWidget.setObjectName("accountMainWidget")
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(self.accountMainWidget)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(0, 0, 741, 231))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.accountMainHLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.accountMainHLayout.setContentsMargins(20, 20, 20, 20)
        self.accountMainHLayout.setObjectName("accountMainHLayout")
        self.accountMainProfilePic = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.accountMainProfilePic.setText("")
        self.accountMainProfilePic.setIcon(icon1)
        self.accountMainProfilePic.setIconSize(QtCore.QSize(160, 160))
        self.accountMainProfilePic.setObjectName("accountMainProfilePic")
        self.accountMainHLayout.addWidget(self.accountMainProfilePic)
        self.accountMainVLayout = QtWidgets.QVBoxLayout()
        self.accountMainVLayout.setSpacing(0)
        self.accountMainVLayout.setObjectName("accountMainVLayout")
        spacerItem6 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.accountMainVLayout.addItem(spacerItem6)
        self.accountMainVHLayout = QtWidgets.QHBoxLayout()
        self.accountMainVHLayout.setObjectName("accountMainVHLayout")
        self.accountMainNameLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(26)
        self.accountMainNameLabel.setFont(font)
        self.accountMainNameLabel.setStyleSheet("color: rgb(8, 21, 63);\n"
"padding: 2px;\n"
"margin-left: 5px;")
        self.accountMainNameLabel.setObjectName("accountMainNameLabel")
        self.accountMainVHLayout.addWidget(self.accountMainNameLabel)
        self.accountMainVariableBtn = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.accountMainVariableBtn.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(27, 82, 246, 255), stop:1 rgba(91, 130, 248, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(32, 81, 227, 255), stop:1 rgba(71, 109, 224, 255));\n"
"}")
        self.accountMainVariableBtn.setObjectName("accountMainVariableBtn")
        self.accountMainVHLayout.addWidget(self.accountMainVariableBtn)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.accountMainVHLayout.addItem(spacerItem7)
        self.accountMainVHLayout.setStretch(2, 1)
        self.accountMainVLayout.addLayout(self.accountMainVHLayout)
        self.accountMainFriendsLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(20)
        self.accountMainFriendsLabel.setFont(font)
        self.accountMainFriendsLabel.setStyleSheet("color: rgb(151, 151, 151);\n"
"padding: 2px;\n"
"margin-left: 10px;")
        self.accountMainFriendsLabel.setObjectName("accountMainFriendsLabel")
        self.accountMainVLayout.addWidget(self.accountMainFriendsLabel)
        spacerItem8 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.accountMainVLayout.addItem(spacerItem8)
        self.accountMainHLayout.addLayout(self.accountMainVLayout)
        self.accountMainHLayout.setStretch(1, 1)
        self.accountGrid.addWidget(self.accountMainWidget, 1, 1, 1, 1)
        self.accountDescWidget = QtWidgets.QWidget(self.gridLayoutWidget_5)
        self.accountDescWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.accountDescWidget.setObjectName("accountDescWidget")
        self.horizontalLayoutWidget_5 = QtWidgets.QWidget(self.accountDescWidget)
        self.horizontalLayoutWidget_5.setGeometry(QtCore.QRect(0, 0, 741, 121))
        self.horizontalLayoutWidget_5.setObjectName("horizontalLayoutWidget_5")
        self.accountDescHLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_5)
        self.accountDescHLayout.setContentsMargins(20, 20, 20, 20)
        self.accountDescHLayout.setObjectName("accountDescHLayout")
        self.accountDescLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_5)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.accountDescLabel.setFont(font)
        self.accountDescLabel.setStyleSheet("color: rgb(151, 151, 151);\n"
"padding: 20px;")
        self.accountDescLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.accountDescLabel.setWordWrap(True)
        self.accountDescLabel.setObjectName("accountDescLabel")
        self.accountDescHLayout.addWidget(self.accountDescLabel)
        self.accountGrid.addWidget(self.accountDescWidget, 3, 1, 1, 1)
        self.accountFriendsWidget = QtWidgets.QWidget(self.gridLayoutWidget_5)
        self.accountFriendsWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.accountFriendsWidget.setObjectName("accountFriendsWidget")
        self.verticalLayoutWidget_5 = QtWidgets.QWidget(self.accountFriendsWidget)
        self.verticalLayoutWidget_5.setGeometry(QtCore.QRect(0, 0, 741, 231))
        self.verticalLayoutWidget_5.setObjectName("verticalLayoutWidget_5")
        self.accountFriendsVLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_5)
        self.accountFriendsVLayout.setContentsMargins(20, 20, 20, 20)
        self.accountFriendsVLayout.setObjectName("accountFriendsVLayout")
        self.accountFriendsLabel = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        self.accountFriendsLabel.setFont(font)
        self.accountFriendsLabel.setStyleSheet("color: rgb(8, 21, 63);")
        self.accountFriendsLabel.setObjectName("accountFriendsLabel")
        self.accountFriendsVLayout.addWidget(self.accountFriendsLabel)
        self.accountFriendsList = QtWidgets.QListWidget(self.verticalLayoutWidget_5)
        self.accountFriendsList.setMinimumSize(QtCore.QSize(502, 152))
        self.accountFriendsList.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-radius: 5px;\n"
"border-color: rgb(207, 207, 207);\n"
"min-width: 815;\n"
"min-height: 230;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(8, 21, 63);\n"
"color: rgb(255, 255, 255);\n"
"}")
        self.accountFriendsList.setSpacing(2)
        self.accountFriendsList.setDragEnabled(True)
        self.accountFriendsList.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.accountFriendsList.setWordWrap(True)
        self.accountFriendsList.setObjectName("accountFriendsList")
        self.accountFriendsVLayout.addWidget(self.accountFriendsList)
        self.accountGrid.addWidget(self.accountFriendsWidget, 5, 1, 1, 1)
        self.accountGrid.setColumnStretch(0, 1)
        self.accountGrid.setColumnStretch(2, 1)
        self.accountGrid.setRowStretch(0, 2)
        self.accountGrid.setRowStretch(6, 2)
        self.stackedWidget.addWidget(self.accountPage)

        # Asign everything
        self.bodyLayout.addWidget(self.stackedWidget, 0, 0, 1, 1)
        self.mainLayout.addLayout(self.bodyLayout)
        self.mainLayout.setStretch(0, 1)
        self.mainLayout.setStretch(1, 100)

        # General scaling
        MainWindow.setCentralWidget(self.centralwidget)



        # Specific scaling
        mainLayoutWidget = QWidget()
        mainLayoutWidget.setLayout(self.mainLayout)
        MainWindow.setCentralWidget(mainLayoutWidget)


        # Login page scaling
        self.loginPage.setLayout(self.loginGrid)

        # Login widget scaling
        self.loginWidget.setLayout(self.loginVLayout)


        # Calendario page scaling
        self.calendarioPage.setLayout(self.calendarioGrid)

        # Calendario main widget scaling
        self.calendarioMainWidget.setLayout(self.calendarioMainGridLayout)

        # Calendario add widget scaling
        self.calendarioAddWidget.setLayout(self.calendarioAddVLayout)


        # Seguimiento page scaling
        self.seguimientoPage.setLayout(self.seguimientoGrid)

        # Seguimiento main widget scaling
        self.seguimientoMainWidget.setLayout(self.seguimientoMainHLayout)

        # Seguimiento in main widget scaling
        self.seguimientoInMainWidget.setLayout(self.seguimientoInMainVLayout)

        # Seguimiento class widget scaling
        self.seguimientoClassWidget.setLayout(self.seguimientoClassVLayout)

        # Seguimiento mark widget scaling
        self.seguimientoMarkWidget.setLayout(self.seguimientoMarkVLayout)


        # Busqueda page scaling
        self.busquedaPage.setLayout(self.busquedaGrid)

        # Busqueda search widget scaling
        self.busquedaSearchWidget.setLayout(self.busquedaSearchHLayout)

        # Busqueda results widget scaling
        self.busquedaResultsWidget.setLayout(self.busquedaResultsVLayout)


        # User page scaling
        self.userPage.setLayout(self.userGrid)

        # User main widget scaling
        self.userMainWidget.setLayout(self.userMainHLayout)

        # User picker widget scaling
        self.userPickerWidget.setLayout(self.userPickerHLayout)

        # User friends widget scaling
        self.userFriendsWidget.setLayout(self.userFriendsHLayout)


        # Cuenta page scaling
        self.accountPage.setLayout(self.accountGrid)

        # Cuenta main widget scaling
        self.accountMainWidget.setLayout(self.accountMainHLayout)

        # Cuenta desc widget scaling
        self.accountDescWidget.setLayout(self.accountDescHLayout)

        # Cuenta friends widget scaling
        self.accountFriendsWidget.setLayout(self.accountFriendsVLayout)


        # Connections
        self.loginBtn.clicked.connect(self.doLogin)
        self.registerBtn.clicked.connect(self.doRegister)

        self.btnCalendario.clicked.connect(lambda: self.changePage(MainWindow, 1, True))
        self.calendarioAddBtn1.clicked.connect(self.addEvent)
        self.calendarioAddBtn2.clicked.connect(self.addSharing)
        self.calendarioAddBtn3.clicked.connect(self.resetEvent)
        self.calendarioMainVaciarBtn.clicked.connect(self.deleteEvents)

        self.btnSeguimiento.clicked.connect(lambda: self.changePage(MainWindow, 2, True))
        self.seguimientoInMainBtn1.clicked.connect(self.previousClass)
        self.seguimientoInMainBtn2.clicked.connect(self.nextClass)
        self.seguimientoClassBtn1.clicked.connect(self.addClass)
        self.seguimientoMarkBtn.clicked.connect(self.addMark)

        self.btnBusqueda.clicked.connect(lambda: self.changePage(MainWindow, 3, True))
        self.busquedaSearchBtn.clicked.connect(self.searchUser)
        self.busquedaResultsList.itemActivated.connect(self.busquedaResultsListEvent)

        self.btnUser.clicked.connect(lambda: self.changePage(MainWindow, 4, True))
        self.userMainVariableBtn.clicked.connect(self.showUserData)
        self.userMainCourseBtn.clicked.connect(self.restartCourse)
        self.userPickerBtn1.clicked.connect(lambda: self.changeUserColor("blue"))
        self.userPickerBtn2.clicked.connect(lambda: self.changeUserColor("green"))
        self.userPickerBtn3.clicked.connect(lambda: self.changeUserColor("purple"))
        self.userPickerBtn4.clicked.connect(lambda: self.changeUserColor("red"))
        self.userPickerBtn5.clicked.connect(lambda: self.changeUserColor("orange"))
        self.userFriendsAcceptBtn.clicked.connect(self.acceptRequest)
        self.userFriendsDeclineBtn.clicked.connect(self.declineRequest)
        self.userFriendsList1.itemActivated.connect(self.userFriendsList1Event)

        self.accountMainVariableBtn.clicked.connect(self.followOrUnfollow)
        self.accountFriendsList.itemActivated.connect(self.accountFriendsListEvent)


        self.setSidebarState(False)
        self.changePage(MainWindow, 0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.loginUserLineEdit.setTabOrder(self.loginUserLineEdit, self.loginPassLineEdit)
        self.loginPassLineEdit.setTabOrder(self.loginPassLineEdit, self.registerBtn)
        self.loginPassLineEdit.setTabOrder(self.registerBtn, self.loginBtn)



    def doLogin(self):
        global conn
        global client

        userInput = self.loginUserLineEdit.text().lower()
        passInput = self.loginPassLineEdit.text().lower()

        query = api.get_users(conn, "pass", "name", f"'{userInput}'")

        if query == "f":
            self.displayPopup("Username doesn't exist.")
        else:
            if query != passInput:
                self.displayPopup("Password doesn't match username.")
            else:
                previous = api.get_users(conn, "connections", "name", f"'{userInput}'")
                api.put_users(conn, "connections", "name", f"'{userInput}'", previous + 1)

                client = userInput
                self.setSidebarState(True)

                color = api.get_users(conn, "color", "name", f"'{client}'")
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap(str((f"resources/logoTR_{color}.png"))), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.btnUser.setIcon(icon1)
                self.btnUser.setIconSize(QtCore.QSize(45, 45))
                self.userMainProfilePic.setIcon(icon1)
                self.userMainProfilePic.setIconSize(QtCore.QSize(160, 160))

                # Calendario update lists
                self.updateCalendario()
                self.updateDay()
                self.changePage(MainWindow, 1)


    def doRegister(self):
        global conn
        global client

        userInput = self.loginUserLineEdit.text().lower().replace("'", "").replace('"', '')
        passInput = self.loginPassLineEdit.text().lower().replace("'", "").replace('"', '')

        if userInput == "" or passInput == "":
            self.displayPopup("You must fill all spaces to create an account.")
        else:
            repeat = api.get_users(conn, "id", "name", f"'{userInput}'")

            if repeat == "f":
                popup = QMessageBox()
                popup.setWindowTitle("New account")
                popup.setText(f"The account '{userInput}' will be registered with the password '{passInput}.'")
                popup.setDetailedText("Illegal characters are automatically eliminated upon creating an account. (" + '"' + "," + " '" + ")")
                popup.setIcon(QMessageBox.Warning)
                popup.setStandardButtons(QMessageBox.Close | QMessageBox.Ok)
                popup.setDefaultButton(QMessageBox.Close)
                result = popup.exec_()

                if result != QMessageBox.Ok:
                    return

                newid = api.get_global(conn, "next_id", "'user'")
                api.put_global(conn, "next_id", "'user'", int(newid) + 1)

                api.post_users(conn=conn,
                    user_id=int(newid),
                    user_name=userInput,
                    user_pass=passInput,
                    user_color="blue",
                    user_day1="'{}'",
                    user_day2="'{}'",
                    user_day3="'{}'",
                    user_day4="'{}'",
                    user_day5="'{}'",
                    user_day6="'{}'",
                    user_day7="'{}'",
                    user_friends="'{}'",
                    user_requests="'{}'",
                    user_connections=1,
                    user_classes="'{{"'Global'", "'N/a'", "'N/a'", "'N/a'", "'0'", "'0'", "'0'", "'N/a No hay datos'", "'N/a No hay datos'", "'N/a No hay datos'", "'N/a No hay datos'", "'N/a No hay datos'"}}'"
                )

                client = userInput
                self.setSidebarState(True)
                self.updateDay()
                self.changePage(MainWindow, 1)

            else:
                self.displayPopup(f"{userInput} is already in use.")


    def changePage(self, MainWindow, index: int, sidebar_placed=False):
        global sidebar
        global visit
        global current_index

        if sidebar_placed == True:
            if sidebar == True:
                current_index = index
                self.retranslateUi(MainWindow)
                self.stackedWidget.setCurrentIndex(index)
        else:
            current_index = index
            self.retranslateUi(MainWindow)
            self.stackedWidget.setCurrentIndex(index)


    # Calendario methods
    def updateCalendario(self):
        global conn
        global client

        db_day1 = list(api.get_users(conn, f"day1", "name", f"'{client}'"))

        for event in db_day1:
            item = QListWidgetItem()
            item.setText(event)
            item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
            item.setCheckState(QtCore.Qt.Unchecked)

            self.calendarioMainL1.addItem(item)

        db_day2 = list(api.get_users(conn, f"day2", "name", f"'{client}'"))

        for event in db_day2:
            item = QListWidgetItem()
            item.setText(event)
            item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
            item.setCheckState(QtCore.Qt.Unchecked)

            self.calendarioMainL2.addItem(item)

        db_day3 = list(api.get_users(conn, f"day3", "name", f"'{client}'"))

        for event in db_day3:
            item = QListWidgetItem()
            item.setText(event)
            item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
            item.setCheckState(QtCore.Qt.Unchecked)

            self.calendarioMainL3.addItem(item)

        db_day4 = list(api.get_users(conn, f"day4", "name", f"'{client}'"))

        for event in db_day4:
            item = QListWidgetItem()
            item.setText(event)
            item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
            item.setCheckState(QtCore.Qt.Unchecked)

            self.calendarioMainL4.addItem(item)

        db_day5 = list(api.get_users(conn, f"day5", "name", f"'{client}'"))

        for event in db_day5:
            item = QListWidgetItem()
            item.setText(event)
            item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
            item.setCheckState(QtCore.Qt.Unchecked)

            self.calendarioMainL5.addItem(item)

        db_day6 = list(api.get_users(conn, f"day6", "name", f"'{client}'"))

        for event in db_day6:
            item = QListWidgetItem()
            item.setText(event)
            item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
            item.setCheckState(QtCore.Qt.Unchecked)

            self.calendarioMainL6.addItem(item)

        db_day7 = list(api.get_users(conn, f"day7", "name", f"'{client}'"))

        for event in db_day7:
            item = QListWidgetItem()
            item.setText(event)
            item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
            item.setCheckState(QtCore.Qt.Unchecked)

            self.calendarioMainL7.addItem(item)


    def addEvent(self):
        global conn
        global client
        global sharing

        event_name = self.calendarioAddLineEdit.text()

        if event_name != "":
            event_day = self.calendarioAddCombo1.currentIndex() + 1
            # [[event_name (name and creator id), checked (0/1)]]
            db_day = list(api.get_users(conn, f"day{event_day}", "name", f"'{client}'"))

            if event_name in db_day:
                self.displayPopup(f"{event_name} already exists in the same day.")
                return

            db_day.append(f"{event_name}")
            api.put_users(conn, f"day{event_day}", "name", f"'{client}'", bp.format1DList(db_day))

            if sharing != []:
                for i in sharing:
                    db_day_share = list(api.get_users(conn, f"day{event_day}", "name", f"'{i}'"))
                    db_day_share.append(f"{event_name} ({client})")
                    api.put_users(conn, f"day{event_day}", "name", f"'{i}'", bp.format1DList(db_day_share))

            item = QListWidgetItem()
            item.setText(event_name)
            item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
            item.setCheckState(QtCore.Qt.Unchecked)

            if event_day == 1:
                self.calendarioMainL1.addItem(item)
            if event_day == 2:
                self.calendarioMainL2.addItem(item)
            if event_day == 3:
                self.calendarioMainL3.addItem(item)
            if event_day == 4:
                self.calendarioMainL4.addItem(item)
            if event_day == 5:
                self.calendarioMainL5.addItem(item)
            if event_day == 6:
                self.calendarioMainL6.addItem(item)
            if event_day == 7:
                self.calendarioMainL7.addItem(item)

            self.resetEvent()


    def addSharing(self):
        global sharing

        sharing_with = self.calendarioAddCombo2.currentText()

        if sharing_with not in sharing:
            sharing.append(sharing_with)
            self.retranslateUi(MainWindow)


    def resetEvent(self):
        global sharing

        self.calendarioAddLineEdit.clear()
        sharing = []
        self.retranslateUi(MainWindow)


    def deleteEvents(self):
        global client

        day = self.calendarioMainCombo.currentIndex() + 1

        if day == 1:
            checked_items = []
            for i in range(self.calendarioMainL1.count()):
                if self.calendarioMainL1.item(i).checkState() == QtCore.Qt.Checked:
                    checked_items.append(self.calendarioMainL1.item(i).text())

            db_day = list(api.get_users(conn, f"day{day}", "name", f"'{client}'"))

            for j in checked_items:
                db_day.remove(j)

            api.put_users(conn, f"day{day}", "name", f"'{client}'", bp.format1DList(db_day))

            self.calendarioMainL1.clear()
            for event in db_day:
                item = QListWidgetItem()
                item.setText(event)
                item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
                item.setCheckState(QtCore.Qt.Unchecked)

                self.calendarioMainL1.addItem(item)

        if day == 2:
            checked_items = []
            for i in range(self.calendarioMainL2.count()):
                if self.calendarioMainL2.item(i).checkState() == QtCore.Qt.Checked:
                    checked_items.append(self.calendarioMainL2.item(i).text())

            db_day = list(api.get_users(conn, f"day{day}", "name", f"'{client}'"))

            for j in checked_items:
                db_day.remove(j)

            api.put_users(conn, f"day{day}", "name", f"'{client}'", bp.format1DList(db_day))

            self.calendarioMainL2.clear()
            for event in db_day:
                item = QListWidgetItem()
                item.setText(event)
                item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
                item.setCheckState(QtCore.Qt.Unchecked)

                self.calendarioMainL2.addItem(item)

        if day == 3:
            checked_items = []
            for i in range(self.calendarioMainL3.count()):
                if self.calendarioMainL3.item(i).checkState() == QtCore.Qt.Checked:
                    checked_items.append(self.calendarioMainL3.item(i).text())

            db_day = list(api.get_users(conn, f"day{day}", "name", f"'{client}'"))

            for j in checked_items:
                db_day.remove(j)

            api.put_users(conn, f"day{day}", "name", f"'{client}'", bp.format1DList(db_day))

            self.calendarioMainL3.clear()
            for event in db_day:
                item = QListWidgetItem()
                item.setText(event)
                item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
                item.setCheckState(QtCore.Qt.Unchecked)

                self.calendarioMainL3.addItem(item)

        if day == 4:
            checked_items = []
            for i in range(self.calendarioMainL4.count()):
                if self.calendarioMainL4.item(i).checkState() == QtCore.Qt.Checked:
                    checked_items.append(self.calendarioMainL4.item(i).text())

            db_day = list(api.get_users(conn, f"day{day}", "name", f"'{client}'"))

            for j in checked_items:
                db_day.remove(j)

            api.put_users(conn, f"day{day}", "name", f"'{client}'", bp.format1DList(db_day))

            self.calendarioMainL4.clear()
            for event in db_day:
                item = QListWidgetItem()
                item.setText(event)
                item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
                item.setCheckState(QtCore.Qt.Unchecked)

                self.calendarioMainL4.addItem(item)

        if day == 5:
            checked_items = []
            for i in range(self.calendarioMainL5.count()):
                if self.calendarioMainL5.item(i).checkState() == QtCore.Qt.Checked:
                    checked_items.append(self.calendarioMainL5.item(i).text())

            db_day = list(api.get_users(conn, f"day{day}", "name", f"'{client}'"))

            for j in checked_items:
                db_day.remove(j)

            api.put_users(conn, f"day{day}", "name", f"'{client}'", bp.format1DList(db_day))

            self.calendarioMainL5.clear()
            for event in db_day:
                item = QListWidgetItem()
                item.setText(event)
                item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
                item.setCheckState(QtCore.Qt.Unchecked)

                self.calendarioMainL5.addItem(item)

        if day == 6:
            checked_items = []
            for i in range(self.calendarioMainL6.count()):
                if self.calendarioMainL6.item(i).checkState() == QtCore.Qt.Checked:
                    checked_items.append(self.calendarioMainL6.item(i).text())

            db_day = list(api.get_users(conn, f"day{day}", "name", f"'{client}'"))

            for j in checked_items:
                db_day.remove(j)

            api.put_users(conn, f"day{day}", "name", f"'{client}'", bp.format1DList(db_day))

            self.calendarioMainL6.clear()
            for event in db_day:
                item = QListWidgetItem()
                item.setText(event)
                item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
                item.setCheckState(QtCore.Qt.Unchecked)

                self.calendarioMainL6.addItem(item)

        if day == 7:
            checked_items = []
            for i in range(self.calendarioMainL7.count()):
                if self.calendarioMainL7.item(i).checkState() == QtCore.Qt.Checked:
                    checked_items.append(self.calendarioMainL7.item(i).text())

            db_day = list(api.get_users(conn, f"day{day}", "name", f"'{client}'"))

            for j in checked_items:
                db_day.remove(j)

            api.put_users(conn, f"day{day}", "name", f"'{client}'", bp.format1DList(db_day))

            self.calendarioMainL7.clear()
            for event in db_day:
                item = QListWidgetItem()
                item.setText(event)
                item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
                item.setCheckState(QtCore.Qt.Unchecked)

                self.calendarioMainL7.addItem(item)


    def updateDay(self):
        global today

        if today == "Monday":
            self.calendarioMainD1.setStyleSheet("color: rgb(254, 140, 10);")
            self.calendarioMainL1.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 2px;\n"
"border-radius: 5px;\n"
"border-color: rgb(254, 140, 10);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
        if today == "Tuesday":
            self.calendarioMainD2.setStyleSheet("color: rgb(254, 140, 10);")
            self.calendarioMainL2.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 2px;\n"
"border-radius: 5px;\n"
"border-color: rgb(254, 140, 10);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
        if today == "Wednesday":
            self.calendarioMainD3.setStyleSheet("color: rgb(254, 140, 10);")
            self.calendarioMainL3.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 2px;\n"
"border-radius: 5px;\n"
"border-color: rgb(254, 140, 10);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
        if today == "Thursday":
            self.calendarioMainD4.setStyleSheet("color: rgb(254, 140, 10);")
            self.calendarioMainL4.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 2px;\n"
"border-radius: 5px;\n"
"border-color: rgb(254, 140, 10);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
        if today == "Friday":
            self.calendarioMainD5.setStyleSheet("color: rgb(254, 140, 10);")
            self.calendarioMainL5.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 2px;\n"
"border-radius: 5px;\n"
"border-color: rgb(254, 140, 10);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
        if today == "Saturday":
            self.calendarioMainD6.setStyleSheet("color: rgb(254, 140, 10);")
            self.calendarioMainL6.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-radius: 5px;\n"
"border-color: rgb(254, 140, 10);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 2px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
        if today == "Sunday":
            self.calendarioMainD7.setStyleSheet("color: rgb(254, 140, 10);")
            self.calendarioMainL7.setStyleSheet("QListWidget {\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(246, 246, 246);\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-radius: 5px;\n"
"border-color: rgb(254, 140, 10);\n"
"min-width: 200;\n"
"min-height: 200;\n"
"}\n"
"QListWidget::item {\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: solid;\n"
"border-width: 2px;\n"
"border-color: rgb(207, 207, 207);\n"
"border-radius: 5px;\n"
"padding: 5px;\n"
"}\n"
"QListWidget::item:hover {\n"
"background-color: rgb(240, 240, 240);\n"
"}\n"
"QListWidget::item:selected {\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-width: 2px;\n"
"border-color: rgb(254, 140, 10);\n"
"}")
    # Calendario methods


    # Seguimiento methods
    def addClass(self):
        global conn
        global client

        name = self.seguimientoClassLineEdit.text()

        if name != "":
            db_classes = list(api.get_users(conn, "classes", "name", f"'{client}'"))

            for i in db_classes:
                if name.lower() == i[0].lower():
                    self.displayPopup(f"{name} is already being used for an existing class.")
                    return

            db_classes.append([name, "N/a", "N/a", "N/a", "0", "0", "0", "N/a No hay datos", "N/a No hay datos", "N/a No hay datos", "N/a No hay datos", "N/a No hay datos"])
            api.put_users(conn, "classes", "name", f"'{client}'", bp.format2DList(db_classes))

            self.seguimientoClassLineEdit.clear()
            self.retranslateUi(MainWindow)


    def nextClass(self):
        global conn
        global client
        global current_subindex

        db_classes = list(api.get_users(conn, "classes", "name", f"'{client}'"))
        classes_max = len(db_classes) - 1

        if current_subindex == classes_max:
            current_subindex = 0
        else:
            current_subindex += 1

        self.retranslateUi(MainWindow)


    def previousClass(self):
        global conn
        global client
        global current_subindex

        db_classes = list(api.get_users(conn, "classes", "name", f"'{client}'"))
        classes_max = len(db_classes) - 1

        if current_subindex == 0:
            current_subindex = classes_max
        else:
            current_subindex -= 1

        self.retranslateUi(MainWindow)


    def addMark(self):
        global conn
        global client

        # TODO(Erton): Fix global marks algorithm for specific class

        mark = self.seguimientoMarkLineEdit.text()
        comb = self.seguimientoMarkCombo1.currentText()

        if mark == "" or comb == "":
            return

        mark = mark.replace(',', '.')

        try:
            mark = float(mark)
        except:
            self.displayPopup("Enter a value between 0 and 10 to add a result and recalculate.")
            return

        if mark > 10.0 or mark < 0.0:
            self.displayPopup("Enter a value between 0 and 10 to add a result and recalculate.")
            return

        # Check finished, start operation
        db_list = list(api.get_users(conn, "classes", "name", f"'{client}'"))
        combo_i = self.seguimientoMarkCombo1.currentIndex() + 1
        percent = self.seguimientoMarkCombo2.currentText()

        db_classi = db_list.pop(combo_i)



        # Specific class
        if percent == "60%":
            # Ammount of marks
            num60 = int(db_classi[5])
            db_classi[5] = str(num60 + 1) # submitted60
            db_classi[6] = str(int(db_classi[4]) + int(db_classi[5])) # submitted

            # Global mark 60
            previous_global60 = db_classi[2]
            if previous_global60 == "N/a":
                db_classi[2] = str(mark) # global60
            else:
                db_classi[2] = str(round((float(previous_global60) * (float(db_classi[5]) - 1) + mark) / float(db_classi[5]), 2)) # global60

            # Global mark general
            if db_classi[1] == "N/a":
                db_classi[3] = db_classi[2] # global
            else:
                db_classi[3] = str(round(float(db_classi[1]) * 0.4 + float(db_classi[2]) * 0.6, 2)) # global

            # Last date
            db_classi[7] = date.today().strftime("%d/%m/%Y") # last

            # Previous
            db_classi.pop(8) # oldest prev
            db_classi.append(f"{db_classi[3]} {db_classi[7]}") # new prev

        if percent == "40%":
            # Ammount of marks
            num40 = int(db_classi[4])
            db_classi[4] = str(num40 + 1) # submitted40
            db_classi[6] = str(int(db_classi[4]) + int(db_classi[5])) # submitted

            # Global mark 40
            previous_global40 = db_classi[1]
            if previous_global40 == "N/a":
                db_classi[1] = str(mark) # global40
            else:
                db_classi[1] = str(round((float(previous_global40) * (float(db_classi[4]) - 1) + mark) / float(db_classi[4]), 2)) # global40

            # Global mark general
            if db_classi[2] == "N/a":
                db_classi[3] = db_classi[1] # global
            else:
                db_classi[3] = str(round(float(db_classi[1]) * 0.4 + float(db_classi[2]) * 0.6, 2))

            # Last date
            db_classi[7] = date.today().strftime("%d/%m/%Y") # last

            # Previous
            db_classi.pop(8)
            db_classi.append(f"{db_classi[3]} {db_classi[7]}")



        db_list.insert(combo_i, db_classi)
        db_global = db_list.pop(0)

        global_marks = []
        for i in db_list:
            if i[3] != "N/a":
                global_marks.append(float(i[3]))

        total_marks = []
        for i in db_list:
            total_marks.append(int(i[6]))



        # Global class
        # Ammount of marks
        marks_submitted = 0
        for i in total_marks:
            marks_submitted += i
        db_global[6] = str(marks_submitted)

        # Global mark general
        global_summed = 0.0
        for i in global_marks:
            global_summed += i
        global_mark = round(global_summed / float(len(global_marks)), 2)
        db_global[3] = str(global_mark) # global

        # Last date
        db_global[7] = date.today().strftime("%d/%m/%Y")

        # Previous
        db_global.pop(8)
        db_global.append(f"{db_global[3]} {db_global[7]}")



        db_list.insert(0, db_global)

        api.put_users(conn, "classes", "name", f"'{client}'", bp.format2DList(db_list))
        self.seguimientoMarkLineEdit.clear()
        self.retranslateUi(MainWindow)
    # Seguimiento methods


    # Búsqueda methods
    def searchUser(self):
        global conn
        global client
        global visit

        visit = "None"
        self.busquedaResultsList.clear()

        text = self.busquedaSearchLineEdit.text().lower()
        all_users = api.get_users_column(conn, "name")

        if all_users != "f":
            match = []
            for i in all_users:
                for j in i:
                    length = len(text)
                    if j[:length] == text and j != client:
                        match.append(j)

            for i in match:
                color = api.get_users(conn, "color", "name", f"'{i}'")
                item = QListWidgetItem()
                item.setIcon(QtGui.QIcon(str((f"resources/logoTR_{color}.png"))))
                item.setText(i)
                self.busquedaResultsList.addItem(item)


    def busquedaResultsListEvent(self, item):
        global visit
        visit = item.text()
        self.changePage(MainWindow, 5)
    # Búsqueda methods


    # User methods
    def showUserData(self):
        global conn
        global client

        connections = api.get_users(conn, "connections", "name", f"'{client}'")
        classes = list(api.get_users(conn, "classes", "name", f"'{client}'"))
        submitted = classes[0][6]

        popup = QMessageBox()
        popup.setWindowTitle(client)
        popup.setText(f"Current course details:\nConnections: {connections}\nResults uploaded: {submitted}")
        popup.setIcon(QMessageBox.Information)
        popup.setStandardButtons(QMessageBox.Close | QMessageBox.Ok)
        popup.setDefaultButton(QMessageBox.Ok)
        popup.exec_()


    def changeUserColor(self, color: str):
        global conn
        global client

        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(str((f"resources/logoTR_{color}.png"))), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnUser.setIcon(icon1)
        self.btnUser.setIconSize(QtCore.QSize(45, 45))
        self.userMainProfilePic.setIcon(icon1)
        self.userMainProfilePic.setIconSize(QtCore.QSize(160, 160))

        api.put_users(conn, "color", "name", f"'{client}'", f"'{color}'")


    def acceptRequest(self):
        global conn
        global client
        global visit

        index = self.userFriendsList2.currentRow()
        requests_list = list(api.get_users(conn, "requests", "name", f"'{client}'"))

        if not requests_list:
            return

        user = requests_list[index]

        friends_list_client = list(api.get_users(conn, "friends", "name", f"'{client}'"))
        friends_list_user = list(api.get_users(conn, "friends", "name", f"'{user}'"))

        requests_list.pop(index)
        friends_list_client.append(user)
        friends_list_user.append(client)

        api.put_users(conn, "requests", "name", f"'{client}'", bp.format1DList(requests_list))
        api.put_users(conn, "friends", "name", f"'{client}'", bp.format1DList(friends_list_client))
        api.put_users(conn, "friends", "name", f"'{user}'", bp.format1DList(friends_list_user))

        self.retranslateUi(MainWindow)


    def declineRequest(self):
        global conn
        global client

        index = self.userFriendsList2.currentRow()
        requests_list = list(api.get_users(conn, "requests", "name", f"'{client}'"))

        if not requests_list:
            return

        requests_list.pop(index)

        api.put_users(conn, "requests", "name", f"'{client}'", bp.format1DList(requests_list))

        self.retranslateUi(MainWindow)


    def userFriendsList1Event(self, item):
        global visit
        visit = item.text()
        self.changePage(MainWindow, 5)


    def restartCourse(self):
        global conn
        global client
        global current_subindex

        popup = QMessageBox()
        popup.setWindowTitle("Reset course")
        popup.setText("All the data in the current academic course will be eliminated permanently.")
        popup.setIcon(QMessageBox.Warning)
        popup.setStandardButtons(QMessageBox.Close | QMessageBox.Ok)
        popup.setDefaultButton(QMessageBox.Close)
        result = popup.exec_()

        if result == QMessageBox.Ok:
            api.put_users(conn, "classes", "name", f"'{client}'", "'{{"'Global'", "'N/a'", "'N/a'", "'N/a'", "'0'", "'0'", "'0'", "'N/a No hay datos'", "'N/a No hay datos'", "'N/a No hay datos'", "'N/a No hay datos'", "'N/a No hay datos'"}}'")
            current_subindex = 0
    # User methods


    # Account methods
    def followOrUnfollow(self):
        global conn
        global visit

        requested = list(api.get_users(conn, "requests", "name", f"'{visit}'"))
        friendship = list(api.get_users(conn, "friends", "name", f"'{visit}'"))
        friendship_client = list(api.get_users(conn, "friends", "name", f"'{client}'"))

        if client in friendship:
            # Unfollow
            friendship.remove(client)
            friendship_client.remove(visit)
            api.put_users(conn, "friends", "name", f"'{visit}'", bp.format1DList(friendship))
            api.put_users(conn, "friends", "name", f"'{client}'", bp.format1DList(friendship_client))

            self.accountMainVariableBtn.setText("Follow")
            self.accountMainVariableBtn.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(27, 82, 246, 255), stop:1 rgba(91, 130, 248, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(32, 81, 227, 255), stop:1 rgba(71, 109, 224, 255));\n"
"}")

        elif client not in requested:
            # Request is sendable
            requested.append(client)
            api.put_users(conn, "requests", "name", f"'{visit}'", bp.format1DList(requested))

            self.accountMainVariableBtn.setText("Sent")
            self.accountMainVariableBtn.setStyleSheet("QPushButton {\n"
"    border-width: 2px;\n"
"    border-style: solid;\n"
"    border-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    background-color: rgb(255, 255, 255);\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}")
        self.retranslateUi(MainWindow)


    def accountFriendsListEvent(self, item):
        global client
        global visit

        visit = item.text()
        if client != visit:
            self.changePage(MainWindow, 5)
    # Account methods


    def setSidebarState(self, state: bool):
        global conn
        global sidebar
        sidebar = state

        if state == True:
            self.btnCalendario.setStyleSheet("QPushButton {\n"
"    padding: 20px;\n"
"    padding-left: 40px;\n"
"    text-align: left;\n"
"    color: rgb(8, 21, 63);\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(246, 246, 246);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(230, 230, 230);\n"
"}")
            self.btnSeguimiento.setStyleSheet("QPushButton {\n"
"    padding: 20px;\n"
"    padding-left: 40px;\n"
"    text-align: left;\n"
"    color: rgb(8, 21, 63);\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(246, 246, 246)\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(230, 230, 230);\n"
"}\n"
"")
            self.btnBusqueda.setStyleSheet("QPushButton {\n"
"    padding: 20px;\n"
"    padding-left: 40px;\n"
"    text-align: left;\n"
"    color: rgb(8, 21, 63);\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(246, 246, 246)\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(230, 230, 230);\n"
"}\n"
"")
            self.btnUser.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(8, 21, 63);\n"
"padding: 20px;\n"
"padding-left: 40px;\n"
"text-align: left")

            color = api.get_users(conn, "color", "name", f"'{client}'")

            icon1 = QtGui.QIcon()
            icon1.addPixmap(QtGui.QPixmap(str((f"resources/logoTR_{color}.png"))), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.btnUser.setIcon(icon1)
            self.btnUser.setIconSize(QtCore.QSize(45, 45))
        else:
            self.btnCalendario.setStyleSheet("QPushButton {\n"
"    padding: 20px;\n"
"    padding-left: 40px;\n"
"    text-align: left;\n"
"    color: rgb(151, 151, 151);\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-radius: 0px;\n"
"}\n")
            self.btnSeguimiento.setStyleSheet("QPushButton {\n"
"    padding: 20px;\n"
"    padding-left: 40px;\n"
"    text-align: left;\n"
"    color: rgb(151, 151, 151);\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-radius: 0px;\n"
"}\n")
            self.btnBusqueda.setStyleSheet("QPushButton {\n"
"    padding: 20px;\n"
"    padding-left: 40px;\n"
"    text-align: left;\n"
"    color: rgb(151, 151, 151);\n"
"    background-color: rgb(255, 255, 255);\n"
"    border-radius: 0px;\n"
"}\n")
            self.btnUser.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(80, 80, 80);\n"
"padding: 20px;\n"
"padding-left: 40px;\n"
"text-align: left")

            icon1 = QtGui.QIcon()
            icon1.addPixmap(QtGui.QPixmap(str(("resources/logoTR_grey.png"))), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.btnUser.setIcon(icon1)
            self.btnUser.setIconSize(QtCore.QSize(45, 45))


    def displayPopup(self, desc: str):
        popup = QMessageBox()
        popup.setWindowTitle("Error")
        popup.setText(desc)
        popup.setIcon(QMessageBox.Warning)
        popup.setStandardButtons(QMessageBox.Close | QMessageBox.Ok)
        popup.setDefaultButton(QMessageBox.Ok)
        popup.exec_()


    def retranslateUi(self, MainWindow):
        global conn
        global sidebar
        global client
        global visit
        global sharing
        global current_index
        global current_subindex

        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "BoxPile"))
        self.banner.setText(_translate("MainWindow", " BoxPile"))
        self.btnCalendario.setText(_translate("MainWindow", "Calendar"))
        self.btnSeguimiento.setText(_translate("MainWindow", "Tracking"))
        self.btnBusqueda.setText(_translate("MainWindow", "Search"))

        if sidebar == True:
            friends_list = api.get_users(conn, "friends", "name", f"'{client}'")
            friends_num = len(friends_list)

            if friends_num == 1:
                self.btnUser.setText(_translate("MainWindow", f"  @{client}\n"
f"  {friends_num} Friend"))
            else:
                self.btnUser.setText(_translate("MainWindow", f"  @{client}\n"
f"  {friends_num} Friends"))

        else:
            self.btnUser.setText(_translate("MainWindow", "  Log In\n"
"  ~"))

        if current_index == 0:
            self.loginTitle.setText(_translate("MainWindow", "BoxPile"))
            self.loginPassLineEdit.setPlaceholderText(_translate("MainWindow", "Password"))
            self.loginUserLineEdit.setPlaceholderText(_translate("MainWindow", "Username"))
            self.registerBtn.setText(_translate("MainWindow", "Sign In"))
            self.loginBtn.setText(_translate("MainWindow", "Log In"))

        if current_index == 1:
            self.calendarioMainD7.setText(_translate("MainWindow", "Sunday"))
            self.calendarioMainD1.setText(_translate("MainWindow", "Monday"))
            self.calendarioMainD2.setText(_translate("MainWindow", "Tuesday"))
            self.calendarioMainD3.setText(_translate("MainWindow", "Wednesday"))
            self.calendarioMainD4.setText(_translate("MainWindow", "Thursday"))
            self.calendarioMainD5.setText(_translate("MainWindow", "Friday"))
            self.calendarioMainD6.setText(_translate("MainWindow", "Saturday"))
            self.calendarioMainD8.setText(_translate("MainWindow", "Remove"))
            self.calendarioMainVaciarExpl.setText(_translate("MainWindow", "Empty every marked event in a day to reorganize it."))
            self.calendarioMainVaciarLabel.setText(_translate("MainWindow", "Day"))
            self.calendarioMainCombo.setItemText(0, _translate("MainWindow", "Monday"))
            self.calendarioMainCombo.setItemText(1, _translate("MainWindow", "Tuesday"))
            self.calendarioMainCombo.setItemText(2, _translate("MainWindow", "Wednesday"))
            self.calendarioMainCombo.setItemText(3, _translate("MainWindow", "Thursday"))
            self.calendarioMainCombo.setItemText(4, _translate("MainWindow", "Friday"))
            self.calendarioMainCombo.setItemText(5, _translate("MainWindow", "Saturday"))
            self.calendarioMainCombo.setItemText(6, _translate("MainWindow", "Sunday"))
            self.calendarioMainVaciarBtn.setText(_translate("MainWindow", "Empty selection"))
            self.calendarioAddTitle.setText(_translate("MainWindow", "Create a new event"))
            self.calendarioAddBtn3.setText(_translate("MainWindow", "Restart the event"))
            self.calendarioAddLabel0.setText(_translate("MainWindow", "Event name"))
            self.calendarioAddCombo1.setItemText(0, _translate("MainWindow", "Monday"))
            self.calendarioAddCombo1.setItemText(1, _translate("MainWindow", "Tuesday"))
            self.calendarioAddCombo1.setItemText(2, _translate("MainWindow", "Wednesday"))
            self.calendarioAddCombo1.setItemText(3, _translate("MainWindow", "Thursday"))
            self.calendarioAddCombo1.setItemText(4, _translate("MainWindow", "Friday"))
            self.calendarioAddCombo1.setItemText(5, _translate("MainWindow", "Saturday"))
            self.calendarioAddCombo1.setItemText(6, _translate("MainWindow", "Sunday"))
            self.calendarioAddLabel1.setText(_translate("MainWindow", "Day"))
            if sharing != []:
                self.calendarioAddLabel2.setText(_translate("MainWindow", f"Sharing with {len(sharing)} ({sharing[0]}, ...)"))
            else:
                self.calendarioAddLabel2.setText(_translate("MainWindow", "Share (optional)"))
            self.calendarioAddBtn1.setText(_translate("MainWindow", "Create"))
            self.calendarioAddBtn2.setText(_translate("MainWindow", "Add"))

            previous_combo_index = self.calendarioAddCombo2.currentIndex()
            self.calendarioAddCombo2.clear()
            self.calendarioAddCombo2.addItems(friends_list)
            self.calendarioAddCombo2.setCurrentIndex(previous_combo_index)

        if current_index == 2:
            db_classes = list(api.get_users(conn, "classes", "name", f"'{client}'"))

            self.seguimientoMarkTitle.setText(_translate("MainWindow", "Upload your last result"))
            self.seguimientoMarkBtn.setText(_translate("MainWindow", "Create"))
            self.seguimientoMarkCombo2.setItemText(0, _translate("MainWindow", "60%"))
            self.seguimientoMarkCombo2.setItemText(1, _translate("MainWindow", "40%"))
            self.seguimientoMarkLabel1.setText(_translate("MainWindow", "Test result"))
            self.seguimientoMarkLabel3.setText(_translate("MainWindow", "Precentage"))
            self.seguimientoMarkLabel2.setText(_translate("MainWindow", "Class"))
            self.seguimientoClassTitle.setText(_translate("MainWindow", "Create a class"))
            self.seguimientoClassLabel1.setText(_translate("MainWindow", "Class name"))
            self.seguimientoClassBtn1.setText(_translate("MainWindow", "Create"))
            self.seguimientoMainTitle.setText(_translate("MainWindow", "Average"))
            self.seguimientoMainMark.setText(_translate("MainWindow", db_classes[current_subindex][3]))
            if db_classes[current_subindex][7] == "N/a Not avaluated":
                self.seguimientoMainSubtitle.setText(_translate("MainWindow", "Not avaluated"))
            else:
                self.seguimientoMainSubtitle.setText(_translate("MainWindow", f"Updated on {db_classes[current_subindex][7]}"))
            if db_classes[current_subindex][0] != "Global":
                self.seguimientoInMainTitle.setText(_translate("MainWindow", "Global history " + db_classes[current_subindex][0]))
            else:
                self.seguimientoInMainTitle.setText(_translate("MainWindow", db_classes[current_subindex][0]))

            if db_classes[current_subindex][11] == "N/a No hay datos":
                self.seguimientoInMainPrev1.setText(_translate("MainWindow", "N/a Not avaluated"))
            else:
                self.seguimientoInMainPrev1.setText(_translate("MainWindow", db_classes[current_subindex][11]))
            if db_classes[current_subindex][10] == "N/a No hay datos":
                self.seguimientoInMainPrev2.setText(_translate("MainWindow", "N/a Not avaluated"))
            else:
                self.seguimientoInMainPrev2.setText(_translate("MainWindow", db_classes[current_subindex][10]))
            if db_classes[current_subindex][9] == "N/a No hay datos":
                self.seguimientoInMainPrev3.setText(_translate("MainWindow", "N/a Not avaluated"))
            else:
                self.seguimientoInMainPrev3.setText(_translate("MainWindow", db_classes[current_subindex][9]))
            if db_classes[current_subindex][8] == "N/a No hay datos":
                self.seguimientoInMainPrev4.setText(_translate("MainWindow", "N/a Not avaluated"))
            else:
                self.seguimientoInMainPrev4.setText(_translate("MainWindow", db_classes[current_subindex][8]))

            self.seguimientoInMainPrev1.setStyleSheet("color: rgb(255, 255, 255);")
            self.seguimientoInMainPrev2.setStyleSheet("color: rgb(255, 255, 255);")
            self.seguimientoInMainPrev3.setStyleSheet("color: rgb(255, 255, 255);")
            self.seguimientoInMainPrev4.setStyleSheet("color: rgb(255, 255, 255);")

            if self.seguimientoInMainPrev1.text() != "N/a Not avaluated" and self.seguimientoInMainPrev2.text() != "N/a Not avaluated":
                if float(self.seguimientoInMainPrev1.text()[:-10]) > float(self.seguimientoInMainPrev2.text()[:-10]):
                    self.seguimientoInMainPrev1.setStyleSheet("color: #93E591;")
                elif float(self.seguimientoInMainPrev1.text()[:-10]) < float(self.seguimientoInMainPrev2.text()[:-10]):
                    self.seguimientoInMainPrev1.setStyleSheet("color: #E59191;")
                else:
                    self.seguimientoInMainPrev1.setStyleSheet("color: rgb(255, 255, 255);")

            if self.seguimientoInMainPrev2.text() != "N/a Not avaluated" and self.seguimientoInMainPrev3.text() != "N/a Not avaluated":
                if float(self.seguimientoInMainPrev2.text()[:-10]) > float(self.seguimientoInMainPrev3.text()[:-10]):
                    self.seguimientoInMainPrev2.setStyleSheet("color: #93E591;")
                elif float(self.seguimientoInMainPrev2.text()[:-10]) < float(self.seguimientoInMainPrev3.text()[:-10]):
                    self.seguimientoInMainPrev2.setStyleSheet("color: #E59191;")
                else:
                    self.seguimientoInMainPrev2.setStyleSheet("color: rgb(255, 255, 255);")

            if self.seguimientoInMainPrev3.text() != "N/a Not avaluated" and self.seguimientoInMainPrev4.text() != "N/a Not avaluated":
                if float(self.seguimientoInMainPrev3.text()[:-10]) > float(self.seguimientoInMainPrev4.text()[:-10]):
                    self.seguimientoInMainPrev3.setStyleSheet("color: #93E591;")
                elif float(self.seguimientoInMainPrev3.text()[:-10]) < float(self.seguimientoInMainPrev4.text()[:-10]):
                    self.seguimientoInMainPrev3.setStyleSheet("color: #E59191;")
                else:
                    self.seguimientoInMainPrev3.setStyleSheet("color: rgb(255, 255, 255);")

            self.seguimientoInMainBtn1.setText(_translate("MainWindow", "Next"))
            self.seguimientoInMainBtn2.setText(_translate("MainWindow", "Previous"))

            current_combo_index = self.seguimientoMarkCombo1.currentIndex()
            self.seguimientoMarkCombo1.clear()
            classes = []
            for i in db_classes:
                if i[0] != "Global":
                    classes.append(i[0])
            self.seguimientoMarkCombo1.addItems(classes)
            self.seguimientoMarkCombo1.setCurrentIndex(current_combo_index)

        if current_index == 3:
            self.busquedaSearchBtn.setText(_translate("MainWindow", "Search"))

        if current_index == 4:
            # friends_list and friends_num obtained from sidebar
            requests_list = list(api.get_users(conn, "requests", "name", f"'{client}'"))

            self.userMainNameLabel.setText(_translate("MainWindow", f"@{client}"))
            self.userMainVariableBtn.setText(_translate("MainWindow", "Details"))
            self.userMainCourseBtn.setText(_translate("MainWindow", "Reset course"))
            if friends_num == 1:
                self.userMainFriendsLabel.setText(_translate("MainWindow", f"{friends_num} Friend"))
            else:
                self.userMainFriendsLabel.setText(_translate("MainWindow", f"{friends_num} Friends"))
            self.userPickerLabel.setText(_translate("MainWindow", "Customize your profile picture:"))
            self.userFriendsLabel1.setText(_translate("MainWindow", "Friends"))
            self.userFriendsLabel2.setText(_translate("MainWindow", "Friend requests"))
            self.userFriendsAcceptBtn.setText(_translate("MainWindow", "Accept"))
            self.userFriendsDeclineBtn.setText(_translate("MainWindow", "Decline"))
            self.userFriendsList1.clear()
            self.userFriendsList2.clear()
            #self.userFriendsList1.addItems(friends_list)
            #self.userFriendsList2.addItems(requests_list)

            for i in friends_list:
                color = api.get_users(conn, "color", "name", f"'{i}'")
                item = QListWidgetItem()
                item.setIcon(QtGui.QIcon(str((f"resources/logoTR_{color}.png"))))
                item.setText(i)
                self.userFriendsList1.addItem(item)

            for i in requests_list:
                color = api.get_users(conn, "color", "name", f"'{i}'")
                item = QListWidgetItem()
                item.setIcon(QtGui.QIcon(str((f"resources/logoTR_{color}.png"))))
                item.setText(i)
                self.userFriendsList2.addItem(item)

        if current_index == 5:
            friends_list = list(api.get_users(conn, "friends", "name", f"'{visit}'"))
            friends_num = len(friends_list)
            requests_list = list(api.get_users(conn, "requests", "name", f"'{visit}'"))
            connections = api.get_users(conn, "connections", "name", f"'{visit}'")
            classes = list(api.get_users(conn, "classes", "name", f"'{visit}'"))
            submitted = classes[0][6]

            self.accountMainNameLabel.setText(_translate("MainWindow", f"@{visit}"))
            self.accountMainVariableBtn.setText(_translate("MainWindow", "Follow"))
            if friends_num == 1:
                self.accountMainFriendsLabel.setText(_translate("MainWindow", f"{friends_num} Friend"))
            else:
                self.accountMainFriendsLabel.setText(_translate("MainWindow", f"{friends_num} Friends"))
            self.accountDescLabel.setText(_translate("MainWindow", f"@{visit} has opened BoxPile {connections} times and has uploaded {submitted} results."))
            self.accountFriendsLabel.setText(_translate("MainWindow", "Friends"))
            self.accountFriendsList.addItems(friends_list)

            color = api.get_users(conn, "color", "name", f"'{visit}'")
            icon1 = QtGui.QIcon()
            icon1.addPixmap(QtGui.QPixmap(str((f"resources/logoTR_{color}.png"))), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.accountMainProfilePic.setIcon(icon1)
            self.accountMainProfilePic.setIconSize(QtCore.QSize(160, 160))

            self.accountFriendsList.clear()

            for i in friends_list:
                color = api.get_users(conn, "color", "name", f"'{i}'")
                item = QListWidgetItem()
                item.setIcon(QtGui.QIcon(str((f"resources/logoTR_{color}.png"))))
                item.setText(i)
                self.accountFriendsList.addItem(item)

            if client in requests_list:
                self.accountMainVariableBtn.setText("Sent")
                self.accountMainVariableBtn.setStyleSheet("QPushButton {\n"
"    border-width: 2px;\n"
"    border-style: solid;\n"
"    border-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    background-color: rgb(255, 255, 255);\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}")
            elif client in friends_list:
                self.accountMainVariableBtn.setText("Unfollow")
                self.accountMainVariableBtn.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(254, 140, 10, 255), stop:1 rgba(255, 190, 94, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(249, 137, 9, 255), stop:1 rgba(249, 186, 92, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(238, 131, 8, 255), stop:1 rgba(235, 175, 86, 255));\n"
"}")
            else:
                self.accountMainVariableBtn.setText("Follow")
                self.accountMainVariableBtn.setStyleSheet("QPushButton {\n"
"    border-width: 0px;\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(28, 85, 255, 255), stop:1 rgba(94, 134, 255, 255));\n"
"    padding: 6.5px;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(27, 82, 246, 255), stop:1 rgba(91, 130, 248, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0 rgba(32, 81, 227, 255), stop:1 rgba(71, 109, 224, 255));\n"
"}")



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)

    # Check credentials
    test_conn = api.connect()
    if test_conn == "f":
        popup = QMessageBox()
        popup.setWindowTitle("New version available")
        popup.setText("Download BoxPile's last version from our official Discord server to use the app.")
        popup.setIcon(QMessageBox.Warning)
        popup.setStandardButtons(QMessageBox.Close | QMessageBox.Ok)
        popup.setDefaultButton(QMessageBox.Ok)
        popup.exec_()

    else:
        test_conn.close()

        MainWindow.show()
        sys.exit(app.exec_())
